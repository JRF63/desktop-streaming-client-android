use crate::{
    media::{MediaEngine, MediaFormat, MediaStatus, MediaTimeout},
    window::NativeWindow,
    MediaPlayerEvent, NativeLibSingleton,
};
use bytes::{Buf, Bytes};
use std::{
    collections::HashMap,
    sync::Arc,
    time::{Duration, SystemTime},
};
use tokio::sync::mpsc::{error::TryRecvError, UnboundedReceiver};
use webrtc::{
    peer_connection::peer_connection_state::RTCPeerConnectionState, rtcp,
    rtcp::payload_feedbacks::picture_loss_indication::PictureLossIndication, rtp,
    rtp_transceiver::rtp_receiver::RTCRtpReceiver, track::track_remote::TrackRemote,
    util::marshal::Unmarshal,
};
use webrtc_helper::{
    codecs::{Codec, CodecType, H264Codec, H264PayloadReader, H264PayloadReaderError, H264Profile},
    decoder::DecoderBuilder,
    WebRtcPeer,
};

const RTP_PACKET_MAX_SIZE: usize = 1500;
const READ_TIMEOUT_MILLIS: u64 = 5000;
const RTCP_PLI_INTERVAL_MILLIS: u64 = 50;
const NALU_TYPE_BITMASK: u8 = 0x1F;

pub struct AndroidDecoderBuilder {
    singleton: Arc<NativeLibSingleton>,
    codecs: Vec<Codec>,
    codec_map: HashMap<String, String>,
}

impl DecoderBuilder for AndroidDecoderBuilder {
    fn supported_codecs(&self) -> &[Codec] {
        &self.codecs
    }

    fn codec_type(&self) -> CodecType {
        CodecType::Video
    }

    fn build(
        self: Box<Self>,
        track: Arc<TrackRemote>,
        rtp_receiver: Arc<RTCRtpReceiver>,
        peer: Arc<WebRtcPeer>,
    ) {
        let singleton = self.singleton;
        let codec_map = self.codec_map;

        let handle = tokio::runtime::Handle::current();
        handle.spawn(async move {
            log::info!("start_decoder");
            if let Err(e) = start_decoder(track, rtp_receiver, peer, singleton, codec_map).await {
                log::error!("Decoder failure: {e:?}");
            }
            log::info!("start_decoder exit");
        });
    }
}

async fn start_dummy_decoder(
    _track: Arc<TrackRemote>,
    _rtp_receiver: Arc<RTCRtpReceiver>,
    _peer: Arc<WebRtcPeer>,
    singleton: Arc<NativeLibSingleton>,
    _codec_map: HashMap<String, String>,
) -> Result<(), DecoderError> {
    let sps_pps = b"x\0\rgB\xc0(\x95\xa0\x1e\0\x89\xf9p\x10\x08\0\x04h\xce<\x80";
    let idr = b"\0\0\0\x01e\xb8\x04\x06\x1f\xff\xff\x04W\xf7\x8f\xc0\x8f{\xf3\xff\xffl\xac\xff\xf7\xfc\x10u\x1c\xa19\xf1[O\xfa\xf8\xff\xff\xfd\xb0\x87\xff\xdb\xfb\xe3\xf0\x11\xfb\x8d\xa9\xbf\xfb{w\xc7\xff\xff\xed\x84?\xfe\xdf\xdf\x0b\xff\xfe\xdf\xa6_\x8c\xfd\xf5?J\x9f|/\x81+[\xf3\xfd\xa6\xbf\xf1Sm\xf4\xf0\xba\x8f\xb5\xff\xed\xfco\xe3?}B\xf8}\x96\xf4\x92\xff\xea\xdfO\xc2\xff\xff\xfbq\xfd>\x99;\xef\xbe\xfb\xef\xbe\xfb\xef\xbe?\x02?f\x8a\xbf\xfd\xbd\xbb\xd5\xf7\xdf}\xf1\xf8\x11\xfb4U\xff\xed\xed\xde\xaf\xbe\xfb\xef\xbe\xfb\xef\xbe\xfb\xef\xbe\xfb\xef\xbe\xfb\xef\xbe\xfb\xef\xbe?\x013t\xfc\xff\xc5X\xab\xf7\xdf}\xf7\xc7\xff\xff\xe3r\xc7\xe3\xad\x7f\xfd\x0b\x8eK'}\xf7\xdf}\xf7\xdf}\xf7\xdf}\xf7\xdf}\xf1\xf8\xf3/\xff\xed\x8f\xd7\xff\xf4\xd3y\xe8\xfb\xef\xbca\xa4\x9d\xf7\xdf}\xf7\xdf}\xf7\xdf}\xf7\xdf[\xed\x8f\xa6\xbe+4\xa3T\xca\xa3\x19LZ\xa3\x1d\x80\x91\xe76:v\xc7\xff\x96\x1e\xb8Y\xc1/\x83\xbe\xdb\xff\xc0$Ed\xce?\x8a\xde\xd78}\xbc7\x1e\xc7\xf7x\x11\x81\x0bi\x0f\x86\xf0\xffv\xd3\xfe^y\xb2\xe2\xbcj\x82\xe5\"\xd6\x1dU\x87K@\xf9\xb3\x97\xc4\xdd\x05\xd8\xdf\x92\x9f\x1d\xff\x96\x1f\xf2\xea\x81J\xa9\xb3\x95\xd4m\x93X[\xd4\xbb\x1a\xa8\xfe&Rw_\xe5\xe7\x9b.+\xc6\xa8.R-a\xd5Xt\xb3\x0f\x9b9|'\xa4\x9c\xc9O_\x90\xce\t=\xb6\x1a\xac\xde\xb7\x8d\x14D\xdct\xcd\xa9S\x16%6\x0cw/\xf6i\xe3\xb0\x85\xb2\xbenXR\xf9~;\x01\x06\xaa<\xdd\x0f\xff\xf6NP\x018$\xf6\xd8k\x9b\xf7\x8d\x142\x9bf:f\xd4\xa4\xdeS`\xc7r\xfffg\xbc,\xe0!y\xa1\x7f\xffL\xb2\xf9\xd2\xf6\xe2p\xfb9|\x15N\xce\xd9\xdf\xec\xe7\xf4\xfeU\xce=\xf8o6.\x97\xe3Eze\xe3\xf2\xdf\xa9\xeb\xf6\x89\xcd\x07\xf8o6i~4W\x93\xa6}_-8\xf7\x0f\xfa/\xff\x8f\xcec\xfd\xd1{\xebmu\xe5\xc5.\x95[9\xdeR$\xec\xf69qt!\xcdmO\xbb\xf64\xa3\xb4\xb1\xfb\xff\xf8\xecj#\xfb\x0b\xfcvjh\xbd\x92/\xeb5\x17\x1d\xff\x96\x1f\xf2\xea\x81@U6r\xba\x8d\xb2k\x0e\xad.f\x15\x97I\x1f\x8e\xcdO\xdf\xfe?\xf6_\xfe?\xe8\xbf\xfe\xfa\xeb\xf2\xaeq\xef\xc3y\xb1t\xbf\x1a+\xd3/\x1f\x96\xfd\x1c\xe3\xc8\x9f\xf7\xfdf\xa0\xec\xca:\xfd\x7fY\xa8\xb8\xef\xff\xf7\xf9qA\xf7\xe1\xba\xb4\xb4\xbf\x05\x8f\xd3/\x1f\x96\xfd\x1e\xe3@\x82~\x8b\xfe\xb3PvF7\xfb\xfax\xec\xd4\xd7\xff\xeb\x8e\xff\xdf\xe9\xf8\xe7T\xfbp\xdc\xd9\x9a_\x80\xe0\xf94\xbc~[\xf59\xa8?\xf5\xd8U\xfe?\xf6\xff\xeb\xac\xd4_\xf2\x97\xd2\xb0\xfe\x94\xcc\xdcJp\xc9M\xa7\xb8\x87'\xdf\x1d\xee:\xf1\xd9\xa9\xfd\xbf\xf1\xff#)\xe9\xa7\xfe?C\xff\xfa\xeb5\x17\x08a\xdag\xde\xf8yN>\xba\xe5t\xbd\x02^ e\x1d\xc1\xf3\x0b\x93.2\xbe\x8b\x86\x1f<\xfa\x9c8\xc8\xe4^?5\xef\xd9\x7f\xd6\xa3\xf3[t?\xfd=u\xc7\x7f\xff\xe9\x84\xb2\x7f\xf4\x12\x1a\x7f\xd2G\x12jl\xbf\xfe=P\xbf\xe9\xe9\xf1\xca\x1b\xd2\xff\xfb\xe3\x95\x9e\x8b\xff\xe5X\xf5\xfe\xff\xf1\xca9\xedWe_\xe3\xd5\x1e\xfd\xff\xe3\x94\xd4\xed\xff\xf8\xf5\xee\x82\xff\xf2+4\xbf\x94\x03\xd1+\x0e[Df;\xf2c2\xdd\xf0\xb3\x813\xd0\x1e\x13\xb7K\x92\x0e\x9b4\xff\xab|\x9f\x90\x96miTr\x9b\xfe\xeb\xfeE\r)\x83\x97\xfcn_\xfcr\x80\x93\xd4#\xbe\xf8\x8d\xcb\xf9\xdf\xfe\x969C\xd2\rn_m\xb2\x7f\xf4\xb4\xb4\xb4\xb4\xb4\xb4\xb1\xca\x1b\xc2=\x84\xc2\xb1\xff\xa5\xa5\xa5\xa5\xaeN\xfa\xe27e\xad=\xf7\xd7}w\xdf]-w\xd7OKKk\"\xdfkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk}\xad\xad\xad--\xad\xad\xad\xad-\xac\x8a\x93[[[[[ZY\x16\xd6\xd6\xd6\xd6\xd6\xd6\xd6\xd6\xd6\xd6\xd6\xd6\xd6\xd6\xb8\xec;L\xfe\xcf\xebhv\x1e\x9f\x1d?\xca\xf2\x9a\xfdr<'\xaf\xfe\xcf\xed'kk\x1d\x80\x91\xbe\x03\xfc_\xff=\x8d\xdc\xc7({\xdf\xe4Jt\xb2\xc3\xc7(o\xdf\xfeUi\x87\x95\xb6\xe8\xe5\xff\xe4\x87\xd2\x8e\xb5K\x1c\xbf\xff\xe8\xda\xc7\xaf\xff\xf8\xf5\xd1\xcb\xff\xdb\xbe]\x1f\x87r\xdf\xfal\xb0\xd2\xa69GZ\xff\xfe7q\xba9\x7f\xfd,\xbbKK]=u\xd7]u\xd6\x1d\xcb.\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xa5\xa5\xa5\xa5\xa5\xa5\xa5\xa5\xa5\xa5\x8e_\xff\xdeX\x0fP\x10\xba\x98W\xf9\xcd\x1c\xd2\xd3(\x8f+_\x1c\xa1\xbf\x7f\xfd\xdd1\xca\x02\x17\xe8\x0f\xf1\x7f\xa3\x8e\xf2\xd8\xbfN\xbf\xf8\xd2\xb1\x85f\xc2\x92:\xf5r\xae\xb5\x1f\x82\xaa\xd2\xff\xb7$\ndn[a\x840\x13~\xa3\xdf\xf5\xcb\x0f\x85\xf0\xed3\xff\xfa$\x03\xffd\x18pF\xa9\x95\x7f\xba\xfe\xbf\xb7\x0c\xe0#\xdfG\xbf\xfe\xf7\0\xef+\x1d\x7f\xeb\x81\xf8w55\xbdr\xd0z\xe7\x91\xff\xf8\x87\xe1\xd8\xba\xf7\xc4\xb4e\xa2\xec\xa9\xd4/\x80G\xbd\xa3^}\xb7\xfb\xe9\x89sd\xf1\xa5\xb7N+\xe1\xc7\xf0\xddz\xbc\xb8.\x92\x9d\xbbo\x8fp\xdf\xbf\xfd\xbd\x18C\x1e\xcf\xfd\xb9z\xf8\xfd\x7f\xff\xb8\xfc\x12<\x06\x8a\xff\xb9\xa6L\x8f4\xe4\xff\xff\x1f\n\xd4\xb7-\xf2\xe1:\xeb\xbe\xfax\xf7\x04\x1a\xa12nM\xff\xe9\xeb&.?\x1d\xcf\xefG\xff\xb3\xfc\x7f\xc3\xd7\xd0Q\xf8{\xa5,%\x87l\xbb\xfe\x10\xc0\x83R]\x95\xf7\xcf\xff\xe1\r%\xff\xfe\xc9\x8fT?\x8f\\\xc7\xf2n\x18\xc7\xf9H\xd0e\x18\xdd\xc7B8\xff\xea\x87\xd8\xf8c\x08N\xf3Cw\x17\\\x8e:O{.M\xfe\xa8h}\x8f\x08\xba\x9a\x98b\xa4K\x19\xe1q\xbf\xd3\xf8 \x02\0\xf8q\xb0\xd8\xa6=\x88\xfc\xff~\xa8\x7f\xc7\xe0\xeb\xc1\xbb\x96\xde\xe3-a\xb0[\xce3\xff\x0c`\xf7\x93\xbd=\x90d\x9a?\xf5\xf4]d\xc1\xfe\x8b\xff\xf7\xc7\xbe\xbf\xff\x8f\xfe\xbf\xfd\xf1\xfd\xff\xff\xbe\xf8\xfe\xbf\xff\xdf\x1f\xeb\xff\xf8\xfe\xcb\xff\xfb\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xb8\xff\xf2\xc2\xff\xf8\xe1\x7f\xfc%\xb9Iu\x840\x12\xfb\xa3\xdf[_\xfbC\xe1\xfc=\xf2J\x9fe]\xa5\xff\tX\xf9aGU\xc7\xe0\xbdiI\nm\x85\xdas_\xe1\x0c\x04\x1a\xb8\xf1a\x8f\xff\xe1\x8f\xf4\xff\xf5\xfb\xe1\x7fom\xbf\xfd*\xf5\xe1\x7f\xf7\xff\xd38\x85\x8e\xb8_\x01\x13)G\xb4\xd7\xff\xc1b\xaa\xee\xff\x91\xfdWp\xff\x82\xcb\xeej\xdbzi\xe9\xe3\xd4\x01\x99\xf9k\xb5\xd3m\xb4\xd3\xff\xc5\xff\xfe\x83\xd4\xfc!\x8e\xe7\xf6i\xff\xc2\x1a\x8c\xdf\xe5?\xff\x845\xfb\xca\xc7\xf8\xfc\xc9\xca\x94\xa5n\x97J\xfb\xe7\xff\\~\x18\xcbK\xb9w\xff\xd7\\v\x1d\xcb\x7f\xf7\xcah\xa6\x87\x7f\xfdX\xfcv\x02=\xf4{\xf8\xdf~\xee\x13p\xf6[]-t\xbdt\xb5\xd2\xff\xff\xac\x9b[&\xd6\xd6\xc9\xb5\xb5\xb5\xb5\xb5\xb5\xb5\xbe\xd6\xd6\xd6\xd6\xd6\xd6\xd6\xd6\xd6\xd6\xd6\xd6\xd6\xd6\xd6\xd6\xd6\xd6\xd6\xd6\xd6\xd6\xd6\xd6\xd6\xd6\xd6\xd6\xd6\xd6\xd6\xd6\xd6\xd6\xd6\xd6\xd6\xd6\xd6\xd6\xd6\xd6\xd6\xd6\xd6\xd6\xd6\xd6\xd6\xd6\xd6\xd6\xd6\xd6\xd6\xd6\xd6\xd6\xd6\xd6\xd6\xd6\xd6\xd6\xd6\xd6\xd6\xd6\xd6\xd6\xd6\xd6\xd6\xd6\xd6\xd6\xd6\xd6\xd6\xd6\xd6\xd6\xd6\xd6\xd6\xd6\xd6\xd6\xd6\xd6\xd6\xd6\xd6\xd6\xd6\xd6\xd6\xd6\xd6\xd6=B[\xf3\x7f\xd3\xb7\xb3\xaf\x86#\x0e\x03\xe2\xb4=O\xa5SF\xa7\xdf\x1d\x82\rL\x8e\xf5\x14\xd2\xfe\xe8~\xbaz\xe9\xeb\xae\xb8[\r2\xdf\xfc\xdb\x9bM\xa9\x96\xd9wl\xbau\xe5kkk\x0b\x7f\xfc\xda\x9f\xae]\xe5\xdaz\xe9iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiic\x14i\xaeL\xb6\xdb\xdbmj\xbb\xeb\xa7\xa7\xa7\xae;\x01\x13w\x1e\xfa\xc6\xbb\xff\xad\xeb\x7f\xf8\xabF\xb2\xe7\x10Ql|\xa1\xa8\x8f_\xf8\xac\x80!m\xe9\xbb\x16 Y\x13\xddD\x16\xb3;\xad\xd9\xe5h\xfa=yL\xa4l\xcf\x9d\xf1\x04mn\xbb\x0c\xe8U\xe6|\xef\x88e\xc0\x8e\xe8\r\xd3m\x9b3\xf6\xaaN\xb1i;{\xb4\x88L\xa3MZ#\\K\x1a1\x90\x9b\x0f\xb5p]F\x80\x0b\xcb\xbc\x98\xdd\xb5\x15\x9e\x912*\xda\x0c\nL]\x964m0\x18\xd2\xf6X\x17p-\xf0L\x9d4\xdbm7,&\xaa\xbbG\xc1D\x8d3E`\xce\xf5\x934V\x0c\xefX0\xe0\x86\xd8\x1d\xeb\xb6\xd6n~\xeb\x1bT\x9f\x02v\xf2!2Li%JZ\x15\xadL7I\xa9K\xb2\xb5\xbf\xddp\x9cE\x8f\xca\xcb6\xbd\xfdbc\xf2`U\xf62\x03\x966\xd6\\\xe3Me\xcd=u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xc4(\xfbX\x91\x0e\xc6\x13+_\xad\x7f\xff\xfa\xf0\xee\xb1u\xac\x0ec2\xc5\xfb\xc2\xf8\t\x1e\xb7\xe7\xff\xd3Y\x93\x93_n\x9e\x9e\x9e\x9e\xba\xef\xe2\x1f\xff\x82\xbc\xb7\x89q<\xaf\xe3\xbb\xca\xfe;\xbd\xac.\xbf\x8fg\xff\xdf\xb2\x9e\xcax\xff\xfe\x81]W\xbeD%(\xe3\xcb\xb2\xefk\x83\xff\xff\x05z<c8\x9d\xdewy\x1e\xfb\xef\xbe\xfb\xef\xbe\xfb\xef\xbe\xfb\xef\xbe\xfb\xef\xbe\xfb\xef\xbe\xfb\xef\xbe\xfb\xef\xbe\xfb\xef\xbe\xfb\xef\xbe\xfb\xef\xbe\xfb\xef\xbe\xfb\xef\xbe\xfb\xef\xbe\xfb\xef\xbe\xfb\xef\xbe\xfb\xef\xbe\xfb\xef\xbe\xfb\xef\xbe\xfb\xef\xbe\xfb\xef\xbe\xfb\xef\xbe\xfb\xef\xbe\xfb\xef\xbe\xfb\xef\xbe\xfb\xe6Wj\xf8\x7f\x1f\n\x08^\xefK\xa5\x82\xdc\x8b\x82\xaf\x8eZ\xa8496zp\xfc6\x86\x0b\xeb\xd2\xf7\x91^\xf5\xbc3\x94\xb3Nk\xd1jzzzz\xeb\xae\x96\x96\xba\xeb\xa5\xae\xba\xeb\xae\xba\xebri\x17\xbe\xfb\xef\xbe\xfb\xef\xbe\xfb\xef\xbe\xfb\xef\xbe\xfb\xef\xbe\xfb\xef\xbe\xfb\xef\xbe\xfb\xef\xbe\xfb\xef\xbe\xfb\xef\xbe\xfb\xef\xbe\xfb\xef\xbe\xfb\xef\xbe\xfb\xef\xbe\xfb\xef\xbe\xfb\xef\xbe\xfb\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xaeE\x84:\xff\xffKk\x1d\xbf\xdf\xfb\xdd===u\xd7\x1d\x86\x99o\xfdWtC\xb0\xd3-\xff\x9b|s\x03\xbf\xff\xa7\xd3\x1f\xff\xff[\xe1\x0f\xff\xfd\x1a\xe1l\x03\x1d'G\xff\xa6\x9e\x15\xb4\x15\xb5\xc1\xaf/\x83^X\xf5\xff\xfe]\x8f_\xff\xed\xa8\xf5\x0e\xe5\xbf\xfb}\xb1\xcf\xff\xd3\xfa\xfe\x03\xff\xe1,C\xee\x97x\x7f,\xfb\xef\xbe\xfb\xef\xbe\xfb\xef\xbe\xfb\xef\xbe\xfb\xef\xbe\xfb\xef\xbe\xfb\xef\xbe\xfb\xd5\xed>\xfb\xef\xbe\xfb\xef\xbe\xfb\xef\xbd'\xbb\xef\xbe\xfb\xef\xbe\xfb\xef\xbe\xfb\xef\xbe\xfb\xef\xbe\xfb\xef\x8f\xd7\xfb\xfd\xee\xb3\xf5\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7\x1d\x8c&V\xbfZ\xfc-\x80\x97=\x05\x7f\xfd\xf1\x8a\x11KP\x8b\xfdc}_\xa7\xccgL7\xcd\x99\xb7\0E\x19\xedG\xbc\xf8zzzzz\xeb\xae\x17\xc3.\x95\x8e\xda'\xff\xd6\xc0\xbf\xf6`D\xff\x84\xaf!m\xaas)\x11\xd8\x1d\xe4&1\xcb\x95\xd7\x91\xff\xf8\xfc\t\xf7\x81\xa5T3\xc2\xdd+\x7f\xf1\xf8}\x964\r\tL\xafo\xfc~t\x08\x9f\x9e\t\xff\xe3\xb0\xfb-!\xa6\xf2\x98\x90\xd7\xff\x11._\x8f\x1do\xb1\xa6\xdc{\xdf11\xc5&\xd9)4.\xa0=T\xb5\xe9\xee\x9f\xff\x9d0\x10\xf4\x7f\x8e\x86\x82l\xd7\x7f\xe1u\x0f\xb2\xd6VL\x89\n\x7f\xe9\x14d[q\x91\xc8.\x17RQ\x11a\xa1\x95\xff\xfeN\xa4;\xd2+8\xe71c\xde\xed\xff\xfdu\x87\xe9\x83\xb0UT\xbd\xb6\xd3\x16\xfc\x8b\xab\n\xa4\x94Q\xe1\xd4c\xf0\x9f\xb4\xb8Ek0\xd8b;\x08T \xee\xd7\xbec.\x8e4\xc7\xff\xf3DN<\xcc\x88\xc6\x88v\n\xaa[\xfd\x13\xd34\t\xe3\xc28\x12\xbd\x03\xdf\xb2D^\x9b\x8c\xd9c\xb0@\xb4\xa9\xdf\xf5\xd33\xd3\x8cv\n\xaa[\xfe\x8d;#M\x94c\xb0\xec\x91\x7f\x8f]\xe3\x94\xd7\x1d\x82\xaa\x96\xffN\x9af`\xca#\xc28\x10\xbdI\xbf\xd3Dc,\x82w\x19\x8e\xc1\x10\xf2K\xfe\xba\xb1\xa6\x98\xec=\xef\xf2G\xfcv\x04\x0f\xa0!W}\xb5\xe9\x99O\xa6\xb8\xec\x15U/m\xb4\xc5\xbf\"\xea\xc2\xa9%\x14xu\x18\xfc'\xed.\x11Z\xcc6\x18\x8e\xc2\x15\x08;\xb5\xef\x98\xcb\xa3\x8d1\xff\xfc\xd1\x13\x8f3\"1\xa2\x1d\x82\xaa\x96\xffD\xf4\xcd\x02x\xf0\x8e\x04\xaf@\xf7\xec\x91\x17\xa6\xe36X\xec\x10-*w\xfdt\xcc\xf4\xe3\x1d\x82\xaa\x96\xff\xa3N\xc8\xd3e\x18\xec1L\xff\x1e\xbb\xc7\xf5\xd7]q\xd8\x10>\x80\x85]\xf6\xd7\xa6e>\x9a\xe3\xb0\xd9\xa5\xfab\xdf\x91uaT\x92\x88vO\x8bi\xfb\xc4[\x08\x98\x8b\xc7`!o <n\xedk}7\x19\xe4\xe3\x1f\x82\xd7-\xffHi$\xeb=g@s\x9e\xb3)\xff\xfcp\xac\xeb\x08q$A\x82f1\xf3\x80\xfc\x03\x1ejg~\xaei\x8er\xe4\x98\xe5\xc69ouO\xfc\xc6/\xb3\x9efb\xd7\x1c\x8d\x1c\tx\xec~\0\xf6W\xd1\xfe\xe8\x8d$\xbdjNd\x19\xb1\xb2\x03\xb0\x9f/\xfc%dYO\xff\xe80\xbcg\x99\x83q\xa2c\xba\x0c\xf4\xbf\xf3\x02\x87|\x9f\xcd\xd9\x84\xf4\x1fB\x9aC\xb0B\x0eT\x7f\x9ef\x9cq\x9a\x86a\xc6dv\x1e\xf7\xf9\"\xc7\x1f\xc7`@\xfc\x04*\xef\xb6\xbe\xc5\xc9\xc7\x7f\xff\x8e\xf7\x1d\x81\x1b\xcafX\x12\x1f\x1cn\xa3\x1d\xf5\xd7]u\xd7]u\xd7]u\xd7\x1d\x8f5\xfc\x9aM\xff]\x7f\x01\xfc\0;\xc2|z\xcb\t\x02'\x83\xef\x8e\xb3\xef\xa7^\xb8\xec<t\xb8\xda&\xa1\x13\xff\xd6\xebu\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xcd\x9c\x82\xd5\xc5\x92\x1d\xe1\xa2\x85&{\x96\xc2\xb5\x96Xg\x02}\xc1\xef_\xfe\x03\xa0b\xb7\x1e|=j\x0c\xdd\xa7\xa7\xa7\xa7\xae\xba\xe1l\x15\xb9o\xf8\xe4\xb3Aj\xa9\xee\xc3\r2\xe8\x7f\x08a\xa6[\xff\xfc\xd2[\x12\xeb\xae\xbb[[[[\xeb\xac\xd8\xfb\xef\xbe\xfb\xef\xbe\xfb\xe3\xf97\xff\xfd\xf7\xdf}\xf7\xdf}\xf7\xdf}\xf7\xdf}\xf7\xdf&\xef\xbe\xfb\xef\xdfz\x93\xbeN?\xf97\xff\xdf'}f\xc7\xdf}\xf7\xdf}\xf7\xdf}\xf7\xdf}\xf7\xdf}\xf7\xdf\x1f\xfe\xf7\xff]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]t\xb1\xdb[\xff\xfd\xaa\xb5\xac\xd8\x9e\x9e\x9e\xba\xeb\x8f\xc3\xec\xb1\xa0\xf8}\xff\xe3\xf0\x1dm\xcb\x16d\x9eTO\x87\xfe\xba\xeb\xae\xba\xeb\xae\xba\xeb\x8e\xdb\xff\xfb\xdc~\x04\xde\xd0N\xdb\xfbv\xdbd\x9b(\xfc\x13z\xd3\x7f\x9f\xde\x7fv\xc7`\x8d\x97o\xf6j\x8dW\x8e\xc3gK\xfe\xf6\xd3|~\x13r\xa5\xff\xa7l\xb3Mk_\xfe\x1863\xc9\xc4y\x98\xe4\xce\xa1\x1ci\x97\xfb\xa6\xe5\x82$\xe16;\x0e\xf4\xbf\xba\xd7{\x840w\xce\xfe\x9b\xb6\xe9\xa2,!\x0e\xc3\xde\xffI\x7f\x1d\x84j_\xc6\xfa\xbf\xbb\xc28e+W\xfa$\x91U\x9d\x18C\x05\x9a\x12\xd9u\xb2M\x93kW\x08`K\xf9\r\xcb\xf6\xf7\x96{p\x8e\x0e\xac\xfe\xec\xd5\x1d\x9c\xd3\x84p\xcaV\xaf\xf7I\xdbD\x9d\xb5\xa8C\xff\xad~?\t\x057-\xbf\xa3\xb6\xaa\xc9\xd4v\x11\xa8\x01\x97\xf6n\x9br\xc3\xa8C\x05T\"]\xbe\xde\xe9\xadT~\x03\xb7K\x7f{&L\x9bv\xdc!\x817\xf0\x15\xebo\xb7\xabh\xd9m\x840\xf7\xb6\xfe\xc9S4\xfc~\x1f\x0c\xb6\xed\xf6\xdd\xb7l\xb0\xae\x12 \x8e\x1ae\xbb~\xaa\xaa\xc8\xd0\xa3\xfe)\x0f\xe2\xfbG\xd7~\x94\xf9\x12\xf8\xec6{\xff\xd5\x926_\xf9\x07\xef\x9b;Z>\xde]\x08`\xbbKe\x8f\xb6Xa\"UTa\x1c68\xdf\xdbd\xc6\xc9\xe5b\xe1\x0c&{o\xf4z\xba\xba\xbc\x9d\xf7\xdf|\x9du\xd7]u\xd7}\xf7\xdf}\xf7\xdf}\xf7\xdf}\xf7\xdf}\xf7\xdf}\xf7\xdf]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd6\xa1,#o7o\xe9\xdd4\xcd\xffG/\xfd?\xe8\x9azzz\xeb\xae\xb8\xef\xff\xfdB\xf8\x08\xae\x99]~\xa9'?\xb1\x97X\xf0%@J\xad\xc4\xb0\xb7\x12\xc0.\xa1\xcb\x88\xe9\xe9\xa6\xd3[M<\x88\x89\xb2\xeb\x01\0`M\x97X\x08\x03\x02\x0b\xa87\xb5\xffN\xec-\x93%\xc2l\xeb~\x13g[\x88.\xa1\xdc\xb7\xf9=\x90E\x96\x05yTs\x9d#s\x9dC\xe2\x1f\x8d|\x16\xe5\xc2\xaf%EC\xdd\x9d\x84{\xb2\xff\xfe\xf8\xe2\xc3\xb1\xd6Tp\x1c\xcb\x97#)\x95\xec}\x90\xe7\x05\xafK\xfd4\xd8\xfd;\x1c/\x87\x10\xd0\xbf\xc8\xf4\xc6n1\xe9\x98\xcd'Az\x1e\x87\x088\xb5\xfe\xc6\x9d\x19\x9f\xa2\x85\xf3G\xfd9\xe1<\x13d\x82^\x87\xe3\xdci\x97\xfe\xc29\xc8\xed\xda\xe8q\xd9a\xf5\xaf\xf5\xc7\xe1#\x15/\xfd\xba\xf7\x8f\xc3\xfb\x17\xfdkm\xd0C\xf6\x7f\xe9\xccq\x84\x9b#\x18\xbc\xe0G\xff\xffq\xff\xfd\xbd\x13uP\x86\n>2\xffm\x92\xb2m\xb7L~<S\xfbZs\xf7L\x9a\xdb\xfd\xbf\xfe\x18V\xe6\xcb\x8c\xccx\xfc\xf9\xff\xfd\xc7\xe9\x7f\xf5\xf1\xf9I\x7f\xb2m\x93\xdbu\x1f\x82?*\xdb\xffMS\xd6?\xd6\xa1\x02\xc1\x07\xb8\xfc\xd9\xff\xdd\xb5\xa8C\x0b-\x7f\xfe\xdb$\xc7\xe5\xcf\xf4\xe7\xee\x9c\xb1\x8e\xc1f\x96\xffZ\xed\xdc!\x9f?\xdb\xa7\xf1\xf8\x13\xeb\xdb\xfe\xd7\xfe\xa1\x0c<\xde~\x9e~\xdd\xed\xbc#\x85\x11P\xff\xdb\xac\xf1N\x90\xff\xffOM;\x8f\xd9\xff\xbd\xd17A(C\t[\x0fM?T\xf6O\x8f\xfc\x028\xbb\xf9\xbb|\xd8\x86\xd2\x0f\xffz\xd4!\\\xd8\x9b\xd8\xee?\x04\xbdZo\xfe\xfa\n?\x08\x19\xd8\x93\xff\xfb\xa8\xfc\x132\xa3\xfd\xdb\x7f\xbd\xa7\xc7\xe9z\x7f\xfc\x9d\xf7\xdf}u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7\x15\xd5k\xf1\xee2\x06\xdf\xc7{\xfe;\xf1\xff\xfdt\xf4\xf4\xf5\xd7]p\x87\xff\xfe\xbfa\xf8C}|s7f%\xfa&\\\x96\xb0\xdedhP\x18\xf5v\xad/\xbe\xbd\xee\x9b*\x08d\xbf\xac\x94\x97\x1b\x12E7\x02\xe0H!\xf9\xb1\xf1\xa0\xc2\x8e\xe4\x1e\x9al\xa9\xa7\xdfm\x93%\xe6\x10)\xf0\xdc48\xc2\xea\x110\x15\x93\xe9\xfa\xa6HB\xa6XA\xff\xb1\xb3\xce\xd6s\x8c\xbf\xafa\xbc\xd9\xb4\\*\xf2\xf1\xf7\xe7\xce_@\xe1Ls\xc7\xd6\xff\x9bg>\xcam4\x1ck\xa1\x17=?\xf9\x9f\x99\xf1\xe4\x88\x9a\xc0\xf3#\xec\xde\x8b\x9b]\xe61\xcc2t-\xcd\xf0\xe9\x1b\x1f\x9f\xcb\xfc\x9d\r\x7fx\xf2C\x88\xfe\xdf\xbc\xda\x9b\xb8@\x90\xf4@\xde}\xf9\xb5\x93\xa1O\x1c\xe3\xc9\x9f\xadS\x91\xfa\xd4!\x85 \x96\xd7v\xbd\xbe\xad\x8f\xc9O.\x7f\xf8\xfd\x9aIl\xc6\xe7\xa7\xd3\x844m7\x97o\xb6\xdb\xf8\xfc\x11?3\x9aE\xd7\xfd\xb8C\x0bOms\xe7\xb7~\xdbc\xf1\xe0Jv\xbb_\xe9\xc2\x18yj-\x7f\xdb\xd9G\xf5\xed\x7f\xf1\xf8\xc3Z\xff\xfe?\xb2\xee\xbf\xf91\x86\xa1\x0e\xd7_\xfe?\x0ce\x9a\xed/\xfe?\x0ce\xbe\xd7\xfe?\xdb\x9e\x97\xff\x1f\xc9\x9e\xff\xf8C\x7fk\xff\x8f\xfe\xd7\xff\x1f\x862\xce\xd6\xed\x7f\xe3\xff\xa4\\\xff\xc2\x18a\x96i\xbc\xbb\x7f\xf8\xfc>\xcb5\xda\xff\xe3\xfd\xaf\xff\xc7\xf7k\xb5\xff\x8f\xc3\xec\xb7\xa4\x97\xfe?\xdfk\xff\x8f\xc3\x19d\xfbM\x7f\xe3\xf0\xfb,\\\xe9%\xff\xbe\xfa\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xe1'\x10\xe7\xfb\xff\xeb{\xe9K\x89iiiiiia\x05\xff\xffX\xfc\xc3\xe9$\x10\xa6\xb9\xa3\xe7\xf4\xc7\xfd\xa8\x05\x80\xb8y\xef\x0f=\xf1\x0cs\x9c0]\x07\xd2\xfd)\xd9\x8e\xf8\xec9\x82\"/C\x8e\xac.\xa0J\xbd\x1da\xe7\x8f\xe5\xd6Tr\xe9\x8dy~4\xb0\xba\x84\x85\xcf\xaf\xf4\xd0\xc6n1\xf6\x90\xd9.\xc7\xe8\x7f\xe3\xbb[\x08\xfd\xae\xf1\xcav\x9f\xe1\xa8\xfe\x1a\x8f\xdc \xe6\xb2\x99\xaf\xdb\xd3MsiX|\x07\x93O\xfc\xb8]|6\xc9\x8f!\x02A\x1f%\xbd\x16\xf6\xdagm\xfcbT\x080H!k\xef7\xeb[x\xc4\xae\xca\xc9z\x1f\xdb\xfd\0\xb2\xb1\x9di\xe5\xe5\xc4\x94&1\xefn\xbe\xdf\x95\x83\xc1\xbd#\x1a\xc3\xb5Y\xa9\xec=\xab\x84q\xf6+N\xac\xbf\xf1\xf8A\xa8m\x92i\xb9a\xed\xfc!\xa4\x1f\xa1.\xabO\xfc#\x8d\x88\x0c\xb0\xf4\xff\xe1\x0c7\xbb\xa5\x874\xfb/\x8f\xc9o\xa6\xc9\xd3O\xfc~\t\xd7\xaa\xd9\xda\xd14\xdf\xff\xbc/\xff\x87\xb2\xf91rw\xdf]u\xd7\\\x9c\x7f\xff\xdb\xf8\xff\xff\xfd\xa5\xc9\xdf\x1f\xff\xffn?\xff\xffu\xc7k\xff\xf9\xe5\\w\xff\xed\xfa\xe3\xbf\xff\xeb]u\xd7]u\xd7]u\xd7]q\xdf\xff.\xfdu\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xc55_{\xc5f\xc1\x19\x01\xf3\xdc\xf5\xd4\x95\x16H!h\x99\x12v\xde5L\xb4]\x82\xdaz\xeb\xae\xba\xeb\xae\x10\xff\xff\xd4/\x80\x9b\xd7\xd6\xbeS3n_\x9c\xd4\xe6\x80\x95\x01*\xb7\x1bl\xb7\r\xb3e\xe3\xc0\x07\xf1\\m\x97\xd7\xeb\xa2HFB)$\x93M\xc6\x92ExSa\x90\xba\x92\xff\xf3\xf6\xf3\xc5\xb5\xd0H-\x04\x82\x0b\xaf_\xcf\x1f$\x11i\xdf\xb1\xf2\xa0\xf1\x18N\x11\xd6\xf5\xab_\xb1\xa0\xb6\xe0]\0\xc7\x11\xfc]B\x0e\x065,\xdb}\x7f\xb4\xcbf\xd0A\xc2<\x9dE\xff$5D\x10\xc1\x1f\xee\x1b\xff\xd0o\xdb\x0cf:v\xfc\xf1\xf6K\x99\xe8\x97\xb1\xf8A\xc1\xda\x8d\xd7\xed\xfa/\x8f'\xd3\xff\x1a2\xbd\xdcs\x8c\xd7\xf7\xba\xd7\xe1\x0c+G\xd7\xff\xc7\xe3\r\x0c\xac\x9d\xdau\xff\x08a.*K\xaf_\xf0\x86B\xcd\x7f\xb5\xb5\xc7\xe1\xa9Z\x19YZ\xe4\xde\x9fxc\xc3\xb0\x99\x89\x1fi\xffO\x08a>\x10\xb5\xa5]\x93*Z\xf1\xd92\xe9\xbbR\xc2\x9f\xf0\x86\x10bG\xbf\xff\x1d\x84\xcck\xed?\xe9\xe1\x0c\x12\xb4K\xad\"\xad~\xbc!\x93;+\xbf\xfcv\x085n\x1a\xaf\xd3\xedq\xd8\x8e5u\xd9:i\xfe\x10\xcc\xa9\xda\xad\xae\x9fO\x1f\x8d\xba\x12\xd9vM\xa5\xb6\xde\x10\xc2\x1cI\xb7v\xbf\xa7\xc7a\xa4\x8bee\x7f\xfe?\x0e\xd3>\xb5\xfbXC\x0fI\x15\xa7\xf5\xa7\xf8\xfcy\xae\xc9\x95\xdf\xfe\x10\xc3\x12\xb55[U\xa7\xd3\xe1\x0c\x99\xab\"\xc3\x7f\xa7\x840\xf4\x91V\xb6\xafO\x93p\x86\x1evv\xab\xb2e\xf7\xc7`\x90\xe8})\xbf\xff\xd6\xa1\x0c` /v\x9d/\xa7\x840\x97\x15%\xd6\xca\xcb\xfc~\x135/WW\xf2o\x840\xcc\tZ\x96\x08\x9aZ\xfdq\xd8w\xdf\xb2\x7f\xf1\xf8D=l\xed:Z-?\xc7a\x8e\x96\xbe\xcb\xfc~\x1b\x81!\xa7\xbbWD\x9fO\x84rcJ\xaa\xd5Y\x7f\x8f\xc2|\x05m\x95\xdav\xe9\xf4\xf0\x86\x12\xe2\xa4\xba\xda\xbf\xd3\xc2\x19\xafVWw\xff\x1d\x86<\xd4\xb0\xff\xf8\xecG4\x95\xdaz~\x9e?\x0f\xc94\xafKV\xfb|\x98{\xa4;#\x1f,%\x87\xf8C9\xcdj\xd5\xd5>\x9axG\nB\x02\xb5\xdav\xfe\x9e\x10\xc7\x10\xadv\x95i\xfe\x10\xc1\xf6l\x99]\xdf\xfc!\x91ST\x915\xd3\xe9\xf1\xf8\xc0\x812\xb2\xec\x93\xfax\xec1\xe7\xbb\xfd?\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd3qj\x18\xcb\x11\x1d<y\xbb\xbe/\x04\xe3V\x90\xcb\xd6\xd5<b\xb6\xe9\xeb\xae\xba\xeb\xae\xb8C\xff\xffY~:\xd0B\xc2\x14\xdaH\xbd\xa4\xb1\xb5\xcc\xbb\xc9NIp*\x07\x81J\\0\xa3\x8dPI\xb4\xd3MZ)\xa6\x9a\xf4z4\xebT\xa6\xd3\xab+\xc2\x9b\x0c\x85\xd6\xa8\xbc\xd2\x8b\xcf\xca\x97<[V\xa8$\x13X\x12\x08.\xbc\x92=L\xbc\x90E\xa7\xebM1\xce \xb4\xd4\x1d\"\x18\xf8\xfb\xe4\xa7_\xd8\xc8g?\x92\xf4\xfe\x10\xc0\xc1\xa9d\x8f\x1fK\xdae\xb3h{\x80\x8bt\x9f\rNv\xb6^\x913&0\xc7\x92g\x8a\x84~k\xf1\xa3+ee\x0c*)\x04\xf8\xcf\xad\xbdy\x1e\xeb\xfd\x0c \xe0\x80e3\xbd\x17\xdae\x9b\xa8C5V\xf4\xf9\x04\x07\xf3=\x16\x8a9\xc7\x86&\xfe\xef<7\xc7\xe0\xb5\x88\xa7^\xb5\xd1\xf1\xf8\x1a\xcaY\x95\x92=\xd3d\xcfu\xc7\xe0\x85\xe1\x8d\xba\xed\x9e\xb4}\x1e\x10\xc7A/O\xad\xbe\xbcv\x0e\xd4\xd3}5m\xf6\xd7\x1d\x83\x8a\xa7]\xe8\xff\x840\xfei\xdd=n\xbfLv\x10\x8c\x1c\xd3\xb3\xd3eG\xb6\xcb\x1d\x83\xaa\x9a7\xd3D\xcd\xf2\xc2\x16?\x07\xbai\xafU]\x1f\x1f\x84\xa6\xa9\xba{\xa7o\xb7\x8e\xc0\xab\xc1*\xf7\xec\xef\xd1\xe3\xb0%\xee\x1cnue\xa3\xab-\xf8C]?\xb7\xfcv\x12(0\xa3m\xbd\xb6\xd9O\xcd\xfd\xbc!\x86\xf3Km\xbb~\xed\xfe\x10\xc2\x11A\xcd;=6T{l\xb1\xf8;SF\xfah\x99\xbeXB\xc7\xe0\xf7M5\xea\xab\xa3\xe3\xb0*\xd1\xd7Ot\xed\xf6\xf1\xd8*\xc2){\xf6w\xe8\xf1\xd8\t{\x92\x0e\xadYh\xea\xcb~;\x04.\x99W\xff\xb6\xb8\xec\x14Up\xcah\xa7\xbe\xdb\xd9q\xf8hDSt\xfaV\xf2\xcf\xc7a\xdbk\xaf\xff\xc7\xe7\0n\x9b\xe9\xdb|\xb0E\x8f\xc0v\\\xb7^\xb5\xd5\x96;\x04\xa3*v\xcf\xbaH\xed]\xbc!\x83Z\xc6\x895\xab\xdb\xd5\xf0\x8e\x1d\xb5\x1f\xdf\xef\x840\xe0\x8aV\xf4\xef{}\xf8\xfcy\xa3\xafM\xb5\xed\xe3\xfe\x7f\xcb\x1b\x7f$I\xf1\xd8:\xa9\xafW\x95\xd9q\xf8$\xf8\xc6\xdd\xf4\xf7\xdb\xe3\xf0\xecE2\x7fT}\x1f\x08`\xbe\xa5v\x7fG\xfdw\xd7}\xf7\xdf}\xf7\xd7}\xf5\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xc4n\xd4\xb6\xb5\xd7]u\xd7]rp\xbeFo\xb5}Zhk\xab\xff\x96%\xe0\x95\xbb\x97\x82V\xee\\.\xa7%\x1c\x97\xe8_\xfcL\x88\xba\x13\x0b\xe8T,.\xb3\x1a\xf1\xe8\xe7\x1a\xff\xea\xd7k\x85\xd5\x84\xa5\x16\xd3/\xfdZ\xe7\x10xg\x0f$\xc9\x94M\xff\xfe\xf0\xbc\xcb\xe1y\x97\xc7\xb9\xf1&]/\xfc{\xabM\x96\xec\xff\xf1\xfd\xfd\x93_\xf8\xfe\xfe\x87\xff\x8fUI\x97?\xfc~4\xde\x92\xdb\xff\xf1\xd8w\xa5\xa2\xfa*-\xf1\xea\x1ca/\xfa\xd7\xc2*jl\xbd\xb6N\xca\xea\xea9B5\x12n\xdf\xa6\xbdq\xcaE\x1f\xfb]c\xd4O?ov\x9dU\xa5\x1c\xa0\xd4\xbd\xff\xec\xb6\x82\nm\xed\xfb\xab\xaf.\x84\x146I\x17\xfd{&\xa1\x15=?n\xefwD\xe8\x82\n%\xbd\xbf\xd6\xbe\x11Q\x90\x01\xbf\xb6\xc94\xda\x92\x16\x82\n\x08^\x1fIt\xbe\xf6\xabh \xa0\x8d\xa0\xdf\xec\x99Y=\xe3\x97\xff\xb5\xf1\xca\rW\xb6\xfe\xac\x96\xcbhz\x9dGo\xb6\xe8\"\xe7\\ \xa3\xa7?\xe9\xfb,\"\xa7\0\x03\xb7\xdb\xa6\xed9z*\xbe}H\x02]>l\xe6\xce\xb7\xcc\xc5\xc7\xa85L\xbf\xb6\xcbi\xd3v\x82\n\x13\xb5m\xdb\xe9W\xbd\xa0\x82\x8a\xaf\xf5d\xd5\xde\xe3\x95=\xbf\xbd\xfe9@N\xfe\x93??n\xadn\xed\x0fP\x8d\xc2oO\xa7ysT\xa9A\x0bM\xc0AC\xe5O\xdb{\xdd4MB*\x1b\xfd\xfbuZ\xd5\xa6\x82\n\ro\x7fm\x93\xb2wwp\x82\x85\xd4}\xbe\xda$\x12&\x95m\x0eP\xd5\r\x97\xd9}\x7f\xfbR\x16ANl'}\x9cr\x85\xec\xb4\xbd\xb7V\x9a{Q\xea2\x02\xba};\xa6\xed\"N\xd0AA\xad\xee\xdf\xaa\xaa\xb2d\xc9\x90\xf5\x06)\x0b\xf6\xee\xee\xe8$MB\n\x1d\xc2[|\xf1\xad\xab+\xb4=Cyo\xee\xca\x95\xdc\xb9\xa5\xa5\xa5\xa5\xa5\xa5\xa5\xa5\xa5\xa5\xa5\xa5\xa5\xa5\xa5\xa5\xa5\xa5\xa5\xa5\xa5\xa5\xa5\xa5\xa5\xa5\xa5\xa5\xa5\xa5\xa5\xa5\xa5\xa5\xa5\xa5\xa5\xa5\xa5\xa5\xa5\xa5\xa5\xa5\xa5\xa5\xa5\xa5\xa5\xa5\xa5\xa5\xa5\xa5\xa5\xa5\xa5\xa5\xae\xba\xeb\xae\xba\xeb\xae\xb8[\n&\\\xdb\xebj\xf3%\xba\xe8}\x8f\xff8W\xc3\xb9p\xac;\xcb\x85P\xd2\xeb\xfa\x1cr\xff\xd3\xc7\xf4\xb4\xb4\xb6\xb6\xb6\xb6\xb6\xb6\xb6\xb1\xca4\x99\xff\xfe\xe3\xd4m\xaf\xfbz\xb6\xda\xc7\xaa_\xe6\x8d\x93\xeeH\x0fR\x86\xbf\xebT\xf5\x08\xaf\xfd\xbf\xe1\x05\t\x98\xb4-\xbf\xec\x8b\x06\xf3\x1e\xa1\xfcO\xfd\xb6\xd7\xe3\xd4#bG\xfd\xbe\xdd\xa0\x8a\x8d\xfb\xfe\xd9!-\xb6\xc9\x90\xf7\x1ee\xff\x9b^\x99a\x8f\xc1#J\xb9\xff\xad~\x10\xc3~\xff\xfbn\xe3\xf0W\xcb\x7f\xa7,:\xa8\xfc\x16io\xfe\xca^\xf8C\x1e\xcf\xff$>\x10\xcb/\xf6\xe5\x82\xb6\xdb'\x08aTI\x7f\xbeH[,*\x08b\xab\xfe\xda\xb2m\xbb!\xf8zV\xbf\xfan\xf4\xde?\t\x18\x96\xbf\xd9Y|~:\x99\xfe\xdf\xd6\xa1\x0c6\x92/\xfbe\x84\xdb\xa8\xfc;\x96\xff\xd92\x97\xbe\x10\xc7D\x97\xfeH[ma\x0c\xf2\xfd\xbbm\xab'\x96\x11\xf8\xd8\x92\xfe\xddk)\x9b\x8e\xc3i\x03\xffn\xad\xb6\xc9\x90C\x0e\xc9\x17\xed\xdb\xbd\x95\x94\x7f\xffo\xf8C\x1b\n_Od\x9d\x1d\xb7h!\x85Q%\xffZ\xd9Y\x0f\xc6\x88?\xfe\xb5q\xd8*\xc0\xc0_\xed\xcb\x04M\xea;\r)\xf7\xff\xb6\xdb'\x1f\x86\x86[\xfd;\xb5\xa2\x8f\xc3\x8e\x97\xfd5\xa7\xb2\x08\xe3``?\xed\xee\xdd\xd1\x040w\xcf\xf6\xea\xad\xb6\xac\x87\xe0\x97\xc0io\xfd\x91\xb5=\xc7a\x1b\x12o\xfa\xd6\xdc\xb0\x1d\x89\xe7\xfd\xb5d\xdd\xdcv\x1e\xf7\xfbr\xc3\xe3\xb0YD\x8b\xfd\xbawm\xe3\xf0\xdc\x91\x7f\xa7wMj;\r\xf4\xbf\xed\xd5\xbe;\xff\xfd\xee?\x0e$\x8b\xfd4\xd3\xb7iGa\xb2H\xbf\xebZ\xd4v\x1b$\x8b\xfe\xd9aU\xba\x8e\xc0M\xfa\x8f\x7f\xb2\xb2\xfa\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xe3\xf7\x9f{\x7f\xfb\xe4\x9a\xae\xba\xeb\xae\xba\xeb\xae\xb8\xef\xf5\xaf\xd7\x1f\x90\x8a}?\xd7\xc7\xf4\xd3\xd3\x8f\xd95\xbbC\xf3\x84[\xff\xd7J;%\x13o)\x9f\xb5\xd6? E?O\xedv\x94!\x92\x89\xff\xff\x1f\xe9\xf4\xfd\xda\xd6?s\xb6\xe9\x9b\xff\xf6\xa1\x07F\x9f\xfe\xfbQ\xfd?\xfbK\xe3\xf2\xdf\xa6\x9f\xda\xdd\xa0\x86m\xce\xbd5O\xbd\xae\xd0\xfd~\xdf\x93=!\xfa\x96Q\xf2\x99\xfb_\x08c \x83M?\xcb\xb7\xdbe\x08a7\0\x1a\x9f\xa7\xcb\xaf\x17\x840\xf2\"\x94\xff\xfd\xa8\xffOO\xf7\xda\x8f\xcfD\xff\xed/\x8f\xc3\xec'\xff\xda\xdd\xa0\x86\x1eDR\x9fO\xbd\xae\xd5\xff\xea\xf8\x84?\xbe\x10\xd4\x12\xe3\xe9\xff\xda\x8f\xc2\x0c\xf3\xa9\xa7\xe9\xfb.\xd4~\x0b\xb8\x8a7\xdb\xfb\xb5\xda\x08c6?\xa7\xaf\xc28`\x8b\xa7\xec\xbe\xd3\xedG\xec\x1a\x7f\xf6\xbbQ\xf8c,\x9a}?\xb5\xbbC\xf3\xb9\xbf\xfa\\\x98\xe1\x0c0\xcb'\xd3\xff\xdb\x08a3o\xbf\xaav\xeb\xda\x846\xbf\xf6\xad\xcb\x08\xfc=\x11t\xfa~\xedv\x829\x18\xfa~\xbf\x1f\x8c\xb4[\xed\xff\xef9!\xf9\t'\x1fO\xff\x1f\xb0m\xf6\xff\xfd\xe8\x197\x1f\x8c5M>\x9f\xfe?\xfb\x7f\xfc\x7f\xfb\x7f\xf98\xfca\xaf\xa6\x9f\xfe?_o\xff\x8f\xdd\xbe\xdf\xff\x08n\x9f\xff\xf5\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xdf\x1d\xff\xfe\xb8\xfc2\xc1\x0f\xd6_o\xdb\x0b\xe3\xd9n\x8bz''\x8c\x7f\x14\x96\xe2\x92\xec\r\x0f\xc78\x08\xf2\xdc\xd7\xfbFa(E\x9e\x14-\x83\xde\x7f\xa2\xac\xb5dk|W`}\x01\xc2\xd8#3\xed\xfehb\xa8\xe9\xb9b_\xd8\xe3\xf0+\xe2\xb6\xe8\xbb\xc3C\xb4\xd9\xe1>\x0e\xc0\x9bx\xf4\xbf\xed*U\xc29\xc8?\xe8\"<\xc6\xb7J\xff\xfc\xc7\xe1[\xa3\xe5\xca\x18\xec$\xff?\xe4IJ\xee\xe1\x0c\x14&\x8d\xfe\xd3$\x8f\x13\xcd\xa8i\x0e\xc2'\xf9\xfdW\xd6\xb8KP\xff\x84\xbb\xd7\x8f\xec\x9fu\xf6_\x08`\x9fC\xd3W\xaf\xfeM\xc7\xe4\xcb\xddW\xff\x08aK_dM\xa7\xfe\x10\xdb\x96\xb4\xfb_\xe1\x1c>\x83u^\xcb\xff\x1e\xe4\xa3\xbeX\"\xff\xc7\xe3\xed\n\xbf\xff\x8f\xdae\xa7Z\x7f\xe1\x0c'\xc1\xe8\xaf&\xd7\xef\xe1\rCZL\xb7\xff\xe4\xe1\x0c`\x0c\x05\xe4\xdb,\x9b\xfe\x10\xc3\x0f:Y7\xff\xc7\xe0\x9d\xa07E^\xcb\xff\x1f\x90\x93\xbeX\"\xff\xc7\xe1\xf6YW\xff\xf1\xf9\xc92\xd3\xad?\xf1\xd8M\x82Z\xf2m\x7f\xf1\xf8>\"\xc9\x96\xff\xfc~?\x8f\xa97\xff\x85@\xbf\xf0\x85+\xf3x\xfc>\xc2U\xcb\x08\xbf\xf0\x86\x18\x1d/\xb2\xff\xc2:;\xa7,\x11\x7f\xe3\xf1\xf6\x8a\xa7V_\xf8\xfc\nj\x93'{\xa5&\xff\x84y`\xde\x9c\xff\xf0\x86\xff\xfb/\x840\xccj\xfdS\xffh!\xa4\xeaM\x8d\xb0\xe9\xffP\x86\x18\x8d\xc9\xb2ia\xe9\xf5\xf0\x860|\xbf\xffe]u\xdf]\xf7\xdf|\x9d\xf7\xdf]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7\\-\x83m\x0b\xfd\x12$S\xfb\xba\xec\x7f\x0b\xe0\x85\xbbM\xfe\xca\xc0\xe8\xab^\xc0\xfa\x03\x0b\xe5\xbf\xd1Y\x12\x0c\xa5\xcc\x16tp\x97\xb1\xf8Y\xc2K\"\xdf\xf2\xc2\x88\x8f}\r\x7f\xa1\x86\\;\x82\x7f\xca\x89\xddy\xa0\xd9\xa1\x12\xf4?\x0b8=\xe7\xfb\x1b\x13\x1a\xb3G\xafc\xf0\xbb\x97?\xc9\x12\xf4O\x81\xb4\xd1\x8a\x92\xec\xbe\x16\xc1\x150\xfb\xfc\xf1\xd2e$*\xba\x1a-\x8e\x16pZ\xe5\xbf\xd5\x87I\x12*%\xec}\x0f\xff\xe2!a\xdb\xba\x1a\x1b\x19\xb7]\x8d\x0fCc\x0c\xbb\x07\xfe\xa3\xa6\xe5\x89^\x18\xf8Pk\xfd\x0c,\xe0\x8e\x9a~\xbf\xc7\xf1I\xf0|M\xeb2\xd7CC\xecc\x9c\x1e\xf3\xfdGM\xcb\x13\x12<N;\x04\xd4\xd3\xf5\xffj\x91\xe0h\\\x8e\xc1k\x96\xfff\xd5%\x1f2\xe1|\x13m\xab~h\xd4\xdcc\xfd)\xe3^\x87\xa1\xc7a'i\xba\xe45\x9a\x15a\xa3C\x8ep\xcb\xdf\xed\x99\x84\xbf]u\xd7]u\xd7\\\xdd\xe9iii\xeb\xae\xba\xeb\xae\xb8\xfc8\xf7\xff\x9a\x06ap\xbe\xd7\xfc\xb3\"DQ]\xddv?\x8600\xef\xbf\xdad\x91\xe2n\xb3_\xecc\xf0%_t7\xfd\xb4\x1aW\xe1\x8c\x12m+\xf6_ee]t?\x86\x1c=#s\x19\xfd\xadkU\xfd\xe1\x0c8{\xfe\xbbj\x92\x840\xa4\xd7\xa1\xef\x1d71\xf1A\xd2i\x91,!\x84\xbb\xd7\xffZ\x90\xd2\xd0\x94!\x87\t\"\xff\xadk\x8f\xc2\x16+\x7f\xe8m\xaaJ:n\x83\x89\x0cv\x18\xe9o\xbd\xd9Y|~\n,\x91V\xb5G\xff\x1f\x82\x95,\xc9\x1b&n\x9b\xaf\xf8\xfc\x13\xb4\xabj\xd1\xb6z\xd1\xff\x8e\xc3\x12D\x9d\xba\xd7\xfe;\x07\xacM\xdbt\xd5\xb5\xff\xd6\xae)\x1f\xf0\x94^H?>\x040\xc6&\xe9\xda\xaf\xfaxC\t\xca'\x95\x9d\x1al\x9be\xfe9\xc1\xf6#vn\x9a\"\xc2\x17\xf8\xfc\x1dx\x9a\xaa\xd5\x1f\xfc~\x10j\x9a\x9d\xb7N\xdf\xf8G\x04\xfaU\x97\x9f\xd9\xb6\x8f\xfcv\x02&R\x8f+%d\x8e\xff\xf1\xda\xa7o\xff\xe3\xb0z\xc5d\xac\x9f\xaf\xf1\xf9\xc3N\x93\xb6\xcdk\xfe;\x189_\xff\xe3\xf5M\xdbt\xd16\x8b\xfcv\x0fX\x9a\xaa\xd5Y\x7f\x8e\xc1\xeb\x1f\xban\xdf\xf8\xfc|HU2U\xb7\xdf\xfcv\x0fX\xac\x95\x927f\xff\xe3\xb0\xc7\x93\x96\x1f\xff\x08`\xf5\x95mm7o\xfc#\x82}*\xcd\xf5T\x7f\xe1\x0c\x13\x1a\xed\xd1\xaf\xff\x08a\xee\x95\xee\x9a&\xd1\x7f\x8f\xe9\xaa\xad\x7f\xf1\xf8\x07\xd4\xaefH\xd9;\xa6\xed\xfd\xac!\x82\xf8\x91\"I\x15Y\xd1\xff\x8e\xc3\x12E\xebZ*/\x840\x9f\xfa\xfd\x95\x97\xfc~#\x95\xd3V\xd7\xfc!\x82\xf8\x91V\x8e\x91g\xff\x840\xbc\xe5Y\xd1\xb2\xb2\xff\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xbc\xa1\xff\xf8J\xab\xd7{\xbe\xfb\xe3\xff\xdb\xff\xc7\xebOM?\xfd\xf2w\xdf\x1f\xfd\xa6\x7f\xfb\xef\xbe\xfb[\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xa7\xae\xba\xeb\xae\xb8\xef\xff\xf5\xc7`\"z\xe9\xdf\xdfr\xfbvH\xaa\x18\xc1\x1dm[_\xb2VVh\xb5\xec~?\tZ\xd5\xff*'\xed\xd2\x0b\xa8q\x8b\xff4M\xab\xf2\xc7(\xabV\xc9\xb2^\xc7\xe1L\x16\xf2\xdf\xf07\xee\xd1\xe1\x11R\x18\xc2\x07(5\xfb#<\xf1\xd1\"Z\xe8\x98\x1f@\x7f\x8fN;\xf9x\xef\xbf2\xf2\xf4zq\x10\xa2\x08Q\x9d\x0fu\xb0\x83\x19\xd0\xf7V\xdc\x83\x0b\xa9\x08?\xec\xd9\xf4\xad\x19\x19h\x08\xe3z\x02\x1e&\x02\xeaTv\xf2\x99\xf2\xc8\xda\xc9eh\xdd\xe4\xa2*r\"#v\"#B\xea\x02\x1e\xf4\x02o\xefO\x920h\x90\xe4\xce=\xa2\x04\xe8G\xb4@\x9d\0\x83\x84&'/\xf6\xa4\xba\xd5Ga\x8f\"\xa2\xf9g\x85\xf1\xd8\x08u\xab\xf67Oi\x7fk]rw\xdf|\x9d=w\xdf]\xf7\xdf}\xf2w\xdf}\xf7\xdf'}\xf7\xd7]\xf7\xdf}u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xc2\xd8\"9\x86\xffed\xa6z\x0fI{\x1e\xc7\x1c\xe0\x8fi/\xf7\xbd\xb6F\xbaA|\xd9\xfe\xda\xa5\x1f2l4K\xd8\xfa\x18Y\xc1)\xb4o\xfe\xdb\x18\xd1\x92-{\x1f\x8epFm%\xff|\xa8\x99$x\x85\xb0{\xcf\xf6\xd6-\x9a\xaa\xfe\xc7\x08a-Z\xbf\xe87\xefp\xbe\x0c\xb6]|\xf0\xa5\x11\xe2\xac=%\xd0\xfe;\x05~\x97\xf9\x12<O-f\xb0\xb6\t\x0e\xc1\xfe\x89\x91\xbb\xe31\xcb\x98K\xa1\xf68[\x07\xbc\xffl\xd1\xc2\xb12tK\xb1\xfcv\x02\x17W\x1e\xffc\xe3FW\xc2\xd8\x13d\xc3\xf7\xeb\x1f\xc5'\xc1\xf1\x1e\xc7\x15t?\x85\xb0R\xd5\xbfZ*\xd9+%]\x81\xf4\x06\xc69\xc1k\x96\xffV\x1d$EE\xfe<8\x8f\xf1\xda\x0e\xfb\xed\xf8\x8d\n\xf6t\xc4\x11D\x11b]\xa0(\x97e\x0c\x04.\xa9\x7f\x9e\xa5R\xcd\x8at\xb4\x98\xe4k\x05\x91\xac\x10]C\xb8!\xfel6j\xd0\xdeD\x8e\xfc\xcdK\x07f\xa4\x17P\x07\xba\xbe\xa7\xf2\xc2\xd1\xec\xa8\xecm\xc7\x04_\x0eH\xaa1\xce\x02\x16\xbe=\xfeTX\x9f\xd7]u\xd7]uU\xd7]=u\xd7]u\xd7\x1f\x87\x1e\xff\xf5n\x90_\xff\x93\x87yuj.\xb7\xd5R\xffC\t\xa8\x01\xc7\xb5Lm\xde\xdf?\xa4\xc9\xa6\xd2L\x83\nM\xcb\xff3\xeag\xa0\xf4\x97\xb1\xf8]\xca\xa3\xfa\x97/\xc9\xa4\xa9Z\xd7\xa1\xf8K\x08\xf7\xa9\x17\x7f\xfb<\x940\xa1\"\xaa\xc9\xbf[y\x1e\x87\xbd\xe3qV\x14\xcb\xf4\xc2\x99hxMB\x05\x9a\xffi\x92G\x8djT\x85\xd4/e\xaf\xcd\r%V\x1d'\xfe\xc7\x1e\xa1#\x151\xf7\xda-\xb5\xb4}\xc2\x0ehoW\xfd\x93T\x89\x0c\xc7c\x17?\xfe\xf8C1]?\xe9\xfc#\x84\x8c\x1e\xd1\xbfw\xae\xefL!\x8f\xa3\xed\xf6\xd15N\xb4\xc7\xe3m\x7f\xee\xde\x9bm\x841\xc0H\xdb\xebj\x9d\xf5\x1d\x81\xaeT\xd9;.\xda\xafd\x9aa\x0c7\x11N\xbd\xba\xf6\xa9\x840\xff\xee\xdd\xbb\xaa\xa6\x9c\xb0\xc2.\x1c\x92.\xfa\xf4\xec\xaf\x08a\xb2\x8d\xb7\xdb\xb5N\xac\x93\x84p\xbf\xdf\xdbd\xc94\xddSL~\x04O\xc6\x86\xda}:%oV\xe1\x0cpBw\xffW\xc2\x18\xda=\xbe\xddQ'iS\xfa\xf5\xe5\x9b\xdf6sf30\xbd\x1bxC\r\xc4S\xb7\xd6\xd5;\xe1\x0c\xa2\x0f\xfd\x92\xd7\x84q\xa4M~\xae\x9d\xe9\xc7\xe5\x18\x7fn\x9fN\x9ac\xf3\x88\x0e\xfe\xdb\xdb\xba\xe3\xb0\xf9F\xed\xf6\xd15N\xd50\x86\x08^j\xdd\xbd\xba\xd3M\x158G\x0c\xd3\x8f\xdb\xb2t\xea\xb8G\x027\xa4e\xb6\xde\xf5eZ\xe1\x1c\xea\xfb}\xbbT\xd15L!\x8f\xa3\xed\xed\xd5\x95;\xe1\x0cm\x1f\xed\xd9>\xd58\xfcq\xd1\xb7\xdb\xad>\x9aa\x0c5\x073\x7fn\xbb\xe9\x843(\xec\xbbvT\xe5\x850\x86{\xed\xed\xd5\x92{\xa7\x08a\xe4R\xbd\xbf\x96\x1di\xc28F\xd2\x7fm4\xfd4\xc2\x18F\xc0\xa1\xbb}\xb7,4Zc\xf1\xa1\x03\xc9\xfe\xac\xbb&\xe1\x0c6Q\xb6\xfe\xf4\xec\x9d8C\x08\xd9\xe0\x8d\xb5\xd9j\x9d\xf8\xfd\x9fo\xb7d\x9aot\xc2\x18~A\xbb}\x92%D\x9a\xbe\x10\xc7\x99v\xf6\xfd;\xa7\x08c\xae\xbd\xbe\xddQ'Zq\xf8\x08\xb7\xab\xb2\xd9v\xdb\x7fD\x9aa\x0c}\x1fo\xb7zw\xa6\x10\xc1#\xeb\xca;{o]\x97\x08c\xde\xfd\xb6\xd5\xf5D\x9c!\x8f{\xf6\xe8\x954\xf4\xd3\x08a\xfb\xe4\xdd\xbe\xdb\xe9\xd9\xe1\x0c?F\xed\xf6\xd1\xb5L\x90\x98\xd3\x08a\x1e:\xd92\xdb\xb2d\x9aoN;\r\xd3?e\xf6T\xfe\xbcs,\xf7\xcd\x9c\xd9L\xcctf\xf8C\x04o\x80\x9bv\xfbo\xa7j\x98\xec\x13\xb2\xba\xbb/VI\xf4\xe3\xb1\xef\x7f\xfah\xb1\xd8z|v\xfe\xb4\xff\xffi\xeb\x1b\xe6\xe9m\xa56K\x95\xe2\x8e\xc6\xa9\xfd\xbf\xb5L!\x87\xffv\xfb\xab$\xd3wN;'\xdb\xfdS\xf8\xec6U\x9b\xbfm\xb7\xd3d\xe9\xa6\x10\xc27\x02/\xb7\xdbwz%\xa6\x10\xc0\x89\xf8e\xb7o\xbd\xaaj\xe9\xc7h{\x7f\xd3\xf8\xec?\x1f\xfa}\x92\xe3\xb3\x7f\xed\xfb\xad0\x86\x1f(\xdd\xbe\xda6\xa9\xad4\xc7a\x8af\xdf\xf4\xfe;\xff\xa7\xfd~\x1f\xff\x84\xa2\xfd{\xef\xbe\xfb\xef\xbe\xfb\xef\xbe\xfb\xef\x85\xd4\x04_\xb7\xe7\xb6\xdf\xfe-`.\x14\xcb\xf0\xa6_j\x83,u\xbd\xac\x8e\xab\xae\xba\xeb\xae\xba\xba\xeb\xae\x9e\xba\xeb\xae\xba\xeb\x85\xb0\th\xe9\x8f\xdb\xf5)\xa2\xf9\xfd\x8d\xa6\x98\xdb\xa0\xea\x81*\x8d\xc9W\x19\x1b\x92\x94f\xce?<q\x15\xae\x19\xc85\xf3cT\xa6\xb6U\x19\x11V*\xe0#\x86\tk\x15g#\xc5\\Q\x05\xd4y\x97\xfaI\x17\xb3Y]\x14\xd7\x0fJ9\xa3\xdaI\x1e\x80\x82\xeb\xff\x18\xc9Ns\x0b.\xb6\xd7\xa5[\x18u\xd7la\xd7]\xc4?\n\xf8B\xbd+W\xbb\x8dD\xd7\x14{\xb3\xf8\xf7oa\t\xb8\x03\xf6\xb7G\xfaL\x8a1\xa5\xa9\xd1\x1a\x86U\x17\xf9a\x84\xa8\xaf\xef\xe8p\x82\x83\xde\x7f\xbaG\x83Q\x1a)RL\x7f\xff;K'\xb2\xb6\xe9Z\xean\xaf\xc0\xfchI\x7f\xc7\xb3j'\x9c\xda:,#\x97?\xd5\x9a\xa3\xd9\xc78A\xcd\x7f\xbb\xbb\xf8\xfc=\xef\xf6\xb5\xf1\xf8J\xafW\xfd\xa6Z\xd4!\x86\xc9\"\xef\xf6\xaf\xe3\xf7\xff\xec\x9aw\x841\xb4/\xf6\xab.\xf1\xf8\x9e\x7f\xb4\xb5\xb4\xc9\xc7\xe1\x1f\xad\xbf\xcb\x9bt\xb5\x1f\x84\xbe\xd5\xff&u&iG\xe3HZ\xfc\x98\\[\xa4\xf2w\xdf|\x9d\xf2w\xdf}\xf7\xdf|\x7fO\xff\xfb\xe4\xef\xbe\xfb\xe4\xef\xbe\xfb\xe4\xef\xbe\xfb\xef\x93\xbe\xfb\xef\xbe\xfb\xef\x8f\xfe\x9f\xff}\xf7\xdf}\xf7\xdf|\x7f\xa7\xff\xfb\xef\xbe\xfb\xef\xae\xbf\xf4\x8a\x84\x12\x90\x87~\x87\xd8\xd8\xd7\xa1\xff\xf0\r!\0\x7f/\xdf\xd8\x99\xa3G\x11\x14DP\x91\xcd\x8e\x13+nA\x84\x8elp\x99[r\x0c.\xa6 \xff\xe8\xd1\xda\xa4#!\x14\xb4\x04q\xbd\x01\x0f\x13\x01u\xff\x8c\xe7\xb6G\xd3H\xd2Sj\xbb\xc5NDDn\xc4Do\x1f\x1c6\xd0C\xdb\\)\xa8\xc5\xc8\xcd\xcc\xc2<l\x81:\x10\x8f\x1b J\x86@\x8b\x84\xa7$\xdf\xea\x933\xa2\xa4\xad\x060S\x88/O\xe5\x82L{Qn\xab\xfa\x1c1\x83\xfc\xffIS]\x1b5\xec~\x18p3\xfd\xfeX$\xa6\xe3QU\xcd\x05\xfd\x0f\xff\x8c>\x1d\xa3A\xd1\xbb\x12\x1c\xea\x17C\xecq\xd8+d\x8b\xfe\x90\xd1\x95\xbd\xe3\xf2\xe7\xf9\xa2\x91\xe0\xf4K\x94a|t\xe1\xfe3r%\x17U\x10\xd93tVj\xbd\x0fCc\x0b8!SO\xd7\xfaZ\xa6|\xcff\xbd\x8f\xc7\xb9X\xff\xa4\xdc\xd1\x9e&\xe1bC\x83\xdf\xe9c\x96\x04z%7\x17\xb1\xf40\xc3\x82\xd7\xa5\xfe\xe91\xed\x18\xb2\xd2\xd7\xfb\x18MR\xff_.;\xe0\xf0\xca\x86\x92E\xfe\xc9\x9d#M%\xa9WC\xecq\xce\x02\x16\xbe=\xfe\x94\xc8~\xba\xeb\xae\xba\xe1l4\xcb\x7f\xe9\xa7\xa6\x9a\xed\xb7\xb6\xda\xeb\xae\xbaz\xeb\xae\xba\xeb\xae\x18\xc1\x12\xb9\xe5\xea\xdd\xfdY\x9a\x0e\x99\xc0\xb9_\xdeW\xf6\x8e?\xe8-P\xa0\xec\xb7\x8a_\x92\x07]\xba\xdd\xdb\xad\xde=N\xc7\xb2\xed\xd8\x94\xbc\xfc0\xd3\xad\xc6\xdb\x1f\xe2a>\x83\xba4\xedQ\x8d\xd0\xe6;\x1fc\xecha\x8c\x01\x9d\xffP\x8fo\x17\x7f\xfa\r\xd2dxR\xf9\x18\xefC\x18\xef\xc7\xf8u\x85\x85t\xf4cU\x9c\xdb\x94\x85\xc9\x08\x981\xaf\xfd5h\xb0N\x11Q/c\xe8a\x87\x02\xb9\x10\xbe\xbb\xee\xc9&F\x82\xf4>\xc7\xff\xc3\xed\xe6~q\x9anP\x9eXG\xe9Z\x8f\xf4\xd2t\x1b\xf8C\x07\xdb\xff\xb3FK4c\xa5\xe1\xff\xec7R\xfd\x1d\x8e\xba\x1f\xc2\x18\xebRo\xfeS<\xa6c\xf2\x11\xa7\xd3\xf6\xcag\x94\xc8\xfe\xda_\xff\x8f\xf6\xf6\xdb\xff\xc7\xf4\xff\xff\x840\x81\xe5\x93O\xffed\x8c~ZS\xe4\xdf/&\xe4\x88\xb6\x11\xd1\xd3\xe9\xfa\x97\xea\xc8z\x84\\0\xb4\x9b\xed\xfa7\xd3\x8ePM\xe5[\x7f\xbd\xfdB\n\x02f\xe9\xf9\xff\xb3\xf8AA\x1f\x95m\xff\xd3\xba\xb8\xe5\x1d9\xffj\xd7\xb8\xe5\x01+\\\x06\xf5\xb7\xff$:\x8eP\xe9\x96\xff\xcb\xd7d\x8d---------,\x8bkkkkKKK]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7\xc3\x0f]<}lx\xce\x87\xf4y}\x8dz\xf8c\x02/O\xce\xae].\xe6\x82N\x83\xa1\xa9\xd1Il\x89\xdd\x83\xdfC\xba\xc7\x85\xd6\xaf\xfe\xae\xb3=|z\x02\xfe\x17P\x117S\xa3\xff\xf9\xd1Rq\x9b\x8cz\xffC\x0b\xa8$?G\xcf\x99,\xd0uiWs%;)\xe3\xffj\xc1\x8b\xcf\xd0\xdd\xc6t\xa3[\x97\xfc0\xc7\x90\x7f\xb8\xd7\xdc\xcd\x1e\x8efk\xa1\xf660\xbe\x19{\xfd\x11`g\xc2\xf5\xd8\xfe\xfd\xf6\xfb\xef\xdf\x1f\xbd.\xff\xfd\xaa\xbe\xd6\xd6\xfa\xeb\xae\xba\xe3\xb0\xd2\x99\xf3Bh\x7fS;\xb0HHHH\xdf\xa9if[S\xd7]u\xd7]q\xea\x11_\xab\xf8\xe4\xb2\xf9\xfe\xa6\xe5M\xc0\xc1\"#\x1f\xaf\xc2E&}!\x9b\x8an.\xc6\xc7\xd0\xc3\x0e\x0f\xb3\xfe\xec\x98\xfaIM\x05~\xcb\xd8\xc7\xe0\"y\xa9\xdb\x7f\xa5\xf6p\xbe\x01\x13\xca\x7f\xee\xfdi9\xe0\xf8+Nb!\x12\x88\xac\x10\xdf\xa6C\xcfr\x08o\xd3W\xdc\x0b\xa8Y\xf7\xfaI4[\xcbm\x19\x19x\x04\x81V\xdc\x02@\x82\xeal\xff\x8c\xe6\x94,\xd2m\x8e**\xca\x18\x08\xd8\x86\xca\x18\x08nB\xb8\xc7\xe1^\x87\xd7\x99\x85\x82E5$d\xc8A%\xac'\xd1\xeb\t\xf4a\x97\x01\x17\xa4\xbdk\x7f\xb5\xc9A\x9d\x15kd%cn\x0e\x12\xb1\xb6\xc8C\x04\x83\xec\xffJ\xd32\xc1(4\xd7c\xf8\xfc%\xe4\xbd\xff<\xab\xf0\xbc\xcd\xa3en\xe3\xb1\x8c\x91Q~\x15\xcf\xfbw}\xf7\xdf\x08c\xb1>\xc9\x9f\xfb&\xc7\xeb\x91\xbf\x96\xbe\xb1WkO\xa7\x831\x04\x03^\xb8\xbf~Jtc\xf2\x11w\xcb\x0f\xfd\xa1\xf8 \xd0\xe7\xc3\xf5e\xe9t\xb4\xdc?\xfc'\xd9\xafh~\tr\x18\xda\xde\xaf\xf6\xfb\x8e\xc0L\xdd\x01}\xd7\xfa\xe9\xebQ\xf8\x0e\xb7\xcb1\xc2\xeb\xe5\xdf\x8f\xc7\xd4\x7f\x9d\x93\xff\x9f\xb6;_\xfe\xdfmu\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]|1\x0f\xfe\x1e\x93\xce\xd5_}\xf7\xdfk\"\xda\xdf}\xf7\xdf}\xf7\xdf}u\xd7]w\xc2\xea\x1f\x19f\xdb\xdbo\xff\x8cI\xa4\xdc\x9aM\xcd\xda\x96\x96\xbaz\xeb\xae\xba\xeb\x8e\xff\xff\xd4~\x135\xfa\xff6\xa7?\xc6nT\xdc\x0c(\xb5\xa7\xfde\xc8\xdc\xf7?D\xeb\xb1\xfcz\x81\x10\xd7%\xff1\x9a\t;(]C\xa8@\x7f\xccd\xd1AR3\xd3s\xf5\xec~\x17P\x10z\xc0\x7f\xa7\xa9w\xb9aq\xdb\xac\x9c\xf1k\x01r\xbd\x06\xe5\x7f!\xe1u\x1e\xf3\xff\x19\xe0\xc7\xbe\x1b8\xc5\x1d3Y\xbd\xba\xdd\xc7\xa9\x90_\xfaf\x83\xa0H\\\xfc\x03\0\xc3\xfb\x1f\xc2\x8f\xbef\x13i\xa9\xf8\xe6>\xe6\xb1\xa6j\x80\x84\xb9\xach\xe5\xe4\x10\x85\xdd\xff\xeb\xc5e\xdf\xae\xd6\xdb\xb4\xc1\xb1\x88\xb4#\xa2\x8d\xc5\xad\\{\r\x14n-t\x1e\xef\xe0Au\x06\xb3/\xf9;&CDX?\x1d\xbb\xe3\xb7iG\xe1\xc0k\xc3\xbcm0\xd5\xcb\x99\x87\xb8\xcb\x10\xec9i\xe2\x1d\xa4\xb4\xfc?\xb7\xec=\xae\x10p\xc6Y\xae\xd3_\xfb\xef\xbe\xf8\xfc>\xc5RK4\x9b\x8c\xbf\xf1\xf9\tx\xcc\xd6\x82v\x91m}<#\x9c\x82\xb6\xad+&\x99\x7f\x841i\xdd\xdd\xef\xff\x1f\x86$\xfd\xedU\x92\xb2\xff\x1d\x86)\xf3'\xfd4\xff\x08`\xbe$N\x9d\xa5u\x7f\xf1\xd9\xd4\xfd\xff\xf1\xf9\x07\xeb\xe2\x9d\xaa%\xfd>\x10\xc1N\x0c\x05V\xb7v\xbf\xc29-\xd0N\xd2$7\xff\x8e\xd5k\xff\xf5\xd7]u\xd7]u\xd7]u\xd7]t\xb4L\x8f}\xf7\xdf}u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7\\v\x10\xf3\xd7\xff\xea\xe3\xb0+\xf2G\xfb\x9e\x08n\x82x\x142\xe3\xbe\xff\xa6\xaci\xa6\xc8\xd0]\x01|v\x0f\xf3\xffc3\xc6nG\x06x\x06_\xfex_\x03A;\xa0f\x17\xfb\x18\xf7`\xff\xf4\x12*s\xc0/\xff\xc7\xf0\xee\xf8:\r\xdd\x03A\x7f\xb1\x8er\xe7\xfd:\xa6\x9a\xa8\xfcq\xa3\xff\x96\x0f\xcd\0\xb6\x08\xcc\xd2\x9f\xe9\xe0R@r\xe1\x9e\xe7\xafc\xf0\xb3\x86^\xff\x8e\xe7\xa2\xde\xbb\x1f\xc7`g}\xfec&\x81O\xd2O\x85\xf2\xc7\xfc\xcf\x99\xe8\xb7\xae\xc7\xf0\xb6\x0c\xb6_\xe9\xa6xR\xcd\x03=z.\xc6\x16pe\xd5\xfe\x99`\xa6\xe3\x1e\x9d\xa6.\xbb\x1fC\x8e\xc1[\x96\xff\xa6h@\xa9\xd9\x0e\xc1\x17\xd2_\xe9\xa6\x823\xd3\xb9\xf1\xd8=\xe7\xf8\xcd\xc8\xd8\xf7\xc14\xe9\x1a\x03\xb0{\xcf\xfah\x97E\x1d\xff\xd3\x9e\x1f]u\xd7]t\xb5\xd7]t\xf5\xd7]u\xd7'\x0b\xe1\xc7\xbf\xfe\xb3@\xd0_\xeca\x0c\"\xaf\x1f\xe9\xdd\x0c\xcfD\xb2\xe0A\xc7=>\xffN\xa6\xe3\x1e\x9ao\x83\xa1\x8f\xfb\x07\xc7\xc7\xbd\xfaFe\x9f''_\xd8\xe1|y\xbf\xffE\x9a\x07\x85%\xe8~\x18pM\x92\xa8\xf2O\xd6h\x1a\t\xba\x0e\x82\xf4=\xd8\xc2\x0e\x16\xfa}\xffL\xcc@\x93\xdeN0^\xa4\xf5\x0c|\xff\xd2\xa0m\xbc\xcc\x99\x91h'\x89\x99>g>d\xf9\x9f@\xb8C\xfd\x0f\x92\xfd\xd6\x03\xc6\xe9b\x87\xfb\x1f\xe8p\xf5\xf1\x1b\xc1t\xb6\xbd\xb9R\x99\x82\x99\x91\xeaIU\xffC\xdcya\xd5\xf8Bl\xe5\xc7YG/\x8e&X\xba\x9f3\xcf\x99\xb1\xc7c\xc9\xbd\x7f#\xfe=\xc3\x04\xad\r\xdaVVT\xfai\xe3\xf1\xcf[\xb2\xb6\xe4\x87\xf8\xfcq.\xb5O,\x1b\xfe\x10\xc7}mY7wO\xdf\x1d\x86)\x8d\xdf\xff\xeb\xbe\xfb\xef\xbe\xfb\xef\xbe\xfb\xef\xbe\xfb\xef\xbe\xfb\xeb\xae\xba\xeb\xae\xba\xeb\xae\x96\x96\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xaf\x0eo\xff\xc8\x11\xc9\xfc\xfb\xff\xc7\xab_>\xff\xed\xe2}\xacz\xe9\xff\xff\x1e\xb2o\xff\xfbX\xf5\xc9\xbf\xff\xc7\xaf\xe4\xdf\xfcz\xd4\xfd\xf3\xdb\xff\xe4Y\x1e\xa1\xf6Y\xa3\xc3~\xff\xf8\xf5A\x96\xf9\xf7\xff\xc7\xae}\xff\xfcy3\xef\xff\xf8\xf5\xcf\xbf\xff\xc7\xa8}\x96V\x1f\xff\xe4UKKKKKKK]u\xd7O]u\xd7]u\xdf\x1e\xb3\xef\xd7\xff\xbf}\xad\xf7\xc7\xae\x9f\xa7\xff\x8f\xed\xb7\xb7_\xfe\xd7k\xe9\x0f\xfe\x90\x97\xbf\x1a\xa0AA\xde\x9c\xae\xd6\xba\xb2\xc2\x18oK\xf7k\xdd\xe9\x840\xaa\tz&\xb5\xa2J\x9dq\xee!#\xb5\xefe\xbb\xe1\x0c\xaa\xf6\x91m]\x12t\xa9\xc7a\xed-\xaf\xb2\x93~;\x0f\x90\x8a[m{U\xdd\xbac\xb0#y\x14\xee\xd7\xab)7\xc7a+\x17Q\xdf\xef\xfe\x1e_\xd4.o555(\xcd\xe4\xba|!\x81\xdd{\xf7i\x916\x9d\xbd0\x86\x1bD\xb7\xddv\xbf\xa6?|\x98ie\xc2\xe2\xdd\xbaV\xdba\x0ct\x12\xdb\xe8\x9b\xe9S\xbc\x9b]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd6n\xfb\xed\xef\xbe\xfb\xef\xbe\xfb\xeb\xae\xba\xeb\xae\xbb\xeb\xae\xba\xeb\xae\xba\xeb\xae\xbaz\xeb\xae\xba\xff\xccB\x8b\xb1\xc7\xf1\xda>\xf3z\x06U#\xecf\xa5\xd0\xff\xff\xdc\xfb\xc2\x1d\x8c\xec\xd6\xdd\xaamW\xa1\xf8]\xc0\xc7R\xdd\x17\x98\xfc&\xc8\xb2\"C\xafc\xf0\xbb\x82\x17\xb1\xfe\x89\x11\x16b\xda*\xec\x7f]u\xd7]t\xb4\xb4\xb1\xce\xc5\xff\xf7\x96\x03\xf0H\xcdV\xdf\xf5\xadQ\xc7\xe0b\xd4\xb6\xcb\xec\x91\xb2f\xe9\xba\x8f\xc1\x19\xe5[\x7f\xd6\x8d\xb3\xd6\x8cr\x87]/\xf4\xed\xfc{\x8e\t\r\x97\xd9Y\x16i\xeb\x8f\xc3\xde\xff\xaa=j\x10\xc1\x10\xe9%\xffN\xdb\xdd\x0c~b?\xb2\xab5F\xc9\x93&A\x0c\x16Q\"\xffF\xefK\x8e\xff\xe9\xdb\xf8\xfc#\x12\x9a_\x9f\xb7\xd1=\xdb\x08\xe1\x1b\xd6\xbf\xb6\x8a\x89\x12\xa3V\xc2\x19X\xdb\xfe\xcb\xe3\xf0Y\x89\x16\xcb\xec\xac\xbdGa\xbf\x7f\xfb#\xc1\x96?(k\xfb\xbaM\xefq\xd8*\xa2E\xff\xd5Y\xb2F;\x0e\xf4\xbf\xfe\xf8\xec'\xac[\x7f\xabk\xbcv\x13\x95\x8bm\xbfed\xcf\xb6;\x0b\xea\xed\xfb\xb7mj\xe3\xb0(\xe9\xc9v\xf6\xf6V[8G\r\xd0\xfd\xbav\xed+k\xeb\xf8N[\xe6\xcelkM\xae\xe8\x8d\x01\xd8O\x8ev\xff\xb7\xe3\xb0B\xb4\x9f\xaf\xffW\xb6;\x0e\xf4\xbf\xd3\xf7\xbf\xfe\x1dk\x17\xe4\xe9mE\xe8\x9c#\x86\xc9\"\xfft\xf7N\xda\xc0G\xbe\x8f\x0f\xc1\xfe~\xf5gG{\x8e\xc1e\x12-\xfe\x9d\xba\xaa\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd3\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]t\xf5\xd7]u\xdf'}\xf5\xd7]u\xd7]q\xdb\xff\xff6\x8e\x7f\xcd\t\xa1\x9bsC\x1f\x86\x86[\xff\xaf\x8f\xcaK\xfd\x93l\x9e\xdb\xa8\xfc\x11\xf9V\xdf\xfaj\x9e\xa1\x0c<\x84\xa2\x9e\x9f\xd3\xf7\x1e\xa0|\xdf\x7f\xed\xd8\xd16\xb5\x088Yk\xfe\xddY[~?\xe1\xf9\x07\xe1\xa9$\xff\xeb\xd9\x04q\xd6\xbf\xfb\xbbwD;\x01\xaf\xe7?\xdb\xd7\xc7\xe4\xcf\xff{\xc7\xe1\xdc\xb7\xfd\xb7OU\x08a\xdc\xb7\xfe\xc9\x93w\x8f\xd9\xff\x9aVN\xde\xa1\x0c{?\xf6\xea\xcb\xc7\xe0\x8f\xca\xb6\xff\xb6\xfbh\xa3\xf0\x9b\x16\xf9}\xad:\xa9\xa2\x9d(C\x0c;\x8f\xfaz\xd6?\x0e\xc9\x17\xfaW\xf5\x08a\x1d\xc1\xcf\xf9\xfbw\xb6\xe8 \x86\x17Y\x7f\xdbE\xa4\xae?\r2\xdf\xed4\xac\xad;\x8f\xc0~\x9c\xb7\xfbw\xf8\xfc\x1d\xb3\xfd\xaa\xb2ed\xcc!\x8f\xa1\x7f\xd4\xb0\xed;X\xfe\x7f\x84+\xd3\xd6\xc6;\x0f\xba_Z\xfdx\x86\x1ec\xf8 \xb3\xb3L~\t\x86T\x7f\xec\xbe?\x08X\xa9\xc5?\xedS\xb4\xb1\xfb?\xf2c\xaaz8\xfcpI\x7f\xd2\xcb\x89:\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xa7\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xea\xab\xae\xbaz\xeb\xae\xba\xe3\xb0\x89b\x8dIy\x98#\xe9\x7f\x0b\xe6!\xdfw?\xf7\xbdh\x7f\x8ep?~\xd95\x99\xe8\x8f\x18\xbf\x8f\xc0E\xbb\r\xba-\xa6^\x91\xe3\x8e\xc2\x88 \x9bk\xb0\xf1t\xb8[\t\x16\x11nXd{\xd1\x7f_\xa1\xe1g\x02\xbd\xb4\xdbO\xabizZ\xd0\xff\x1c\xe0gr\xdd\x87\x91\xefK\xf8_\x0c\x8c\xb5Ze\x99\xe5\x82L\xbd\x16\xbfe\x8ep\xd2\xd4h7\xed\xa4\xfd,!\x82\x16\xc7>\x16\xcb\x99\xe6y\xe3\xd7\xc7`\xf7M\x06\xfb%K\xb2\\-\x84\x1e\x07?\xfd\xbe\xd8\x8a\x88\xacB\xc4n\xa8\x85\x88U\xa8-\x98\xad\xd7\xcd\r\xbc\xd0\xb2#\x13\xa3B\x8bF9\x8d\x16\x8cy w\xfd_\xf6\xfbq\xeb\xfa\xfb&\xfba\x02C\xd1\x14\xff\xdb\xf6\xc2\x1a6\x9b\xcb\xbf\xb7\xf1\xef\xa2\xda_o\xb7\x08\x12Z+-\xaf\xb7\xdblv\x8f\xff\xb7\xe3\xff\xb5\xfb{m\x8f\xd6\xfb\xa2\xff\xa6\x10\xcbJ\xef\xf6\xfbq\xf9\xcc\xfb\xb5\xed\xb7\xbc~\x1fDQ.\x97\xed\xf6\xc7\xe3\xf6\x124\xbd/\xfac\xf1\x86Mz\xfb\x7f\x08a\x8f\x9ad\x9f\xf6\xfdB\x1a7k\xfe\xdfl\x7fV\xbf\xd3\xdbL\xbcv\x8f\xcf\x97\xfb\xde?\x11\xa3]\xaf\xb7\xdbl~zZ\xedzi\xe9\xc7\xf4\x92\xc9\x9f\xa6\x9e\x9c~\xb3Kn7=2\xfe\x98C@)\x9d?\xed\xfc!\x83\xfa{/\xb6\xde\xc9\xb1\xf8\xf8%\xfd\xafO\xa7\x08e\xa5\xff\xed\xed\xb6? G\xff\xa7\xd3\x08a\x89\xa8\xd7\x7f\xfb(\xfc1\x9d\xff\xed\xb7\xe1\x0cx\x12\xedj\xd7\xbb}\xb1\xf9\xe8\x92_\xe9\xfaa\x0c0\x88\xa3_\xf6\xfe;6\x7f\xb7~\xdbc\xb0\xee[\xff\xb7\xdb\x1d\xff\xed\xdf\xc7\x7f\xff\xdb\x8e\xc2V\x06\x85\xff\xb2\xdbx\xec;\x96\xff\xdbo\xb6\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xac,\xa2\x0f\xc3\xaa\xac\x89\x1f\x9f\xfd\xf1\xd8=\xd3d\xd6\x8ax\xc5\xaf\x1e\xa63\xba\xed\xb1\xd7I\x8f\x1f\xbe\xc4\xcfD\xd7\xa2K\x1c\xe1e\x134[\xd1t\xbf\x1d\x87\x16\xa3\x99\xf9a\xf4\\v\x0ft\xc8\x91\xde\xc9\xafd\x96;\x08o\\j\xce\x8a\x8b\xfcv\x0ft\xedf\x8bt\xbd,\x7f\xc9\xcd\\\x91\xd5\xe5\x91e\x8e\xc1!\xd8\xc6\xdd\xad\x93H\x92\xe9c\xb0\x92\xf5\xc7]\x9a*\xfe?\x02\x8c\xe8\xd1\xbb\xa9\xfd/H\xf1\xc7`gr\xda\xb0\xf4]-\x12,/\x80v\xae\xa6\xedl\x8d\nY\xe3K_\xb1\xe3\x9c4\xa7\x1d\xbeXR\xe8\xb1\xd8e\xa5\xa3\x7f\xff]u\xd7]u\xd7\\\xd7\xaaZZW]u\xd7]p\x86\x07\xef\xd9\xa0f2\xcc\xb0_E\x0b\xf5\xdf\xea\x17\xbe!1\xed\x1d\x8fTx\xdb,!\x82\xdd\xab\xb6\xd6\x89U/\xc2\xf8\x11\xbd\x0co\xb0\xf9`G\xa5\xd1z\xfd\x0f\x1c\xe0W\xfa[\x95\x16\xe6\x82\x1b\xaf\xd7\x08`\xce\xd77]\x86\x87=%\xc2\x18+\x9b_\xd5\x9f\xaa<!\x83\xdd4H\xf7e\xee\xcb\x08`o\x95\xb6\xbbe\x82](X\xec\x05\xbc\xf4r?\x1f\xc5*\x1e\xf8>8\xec\x12\x1f\x17,\xf3o\xac4\xba\xe1\x0cY\xec6}\x92^\xcb\x1e\xa0w\xbd\xb4Hfy\x1eK\x9f\xe3\xb2\xd3C\xd1W\xebP\x8b\x8e\xb4\xd5:\xd3\xff\x8f\xcfl\x9d4\xdc\x90\xf6\xfe?xkZu\xa7\xfe\x10q^\x9f\xff\xc7\x92L\xban\xaa\x9f\xfe\xd3|\x7f\xe4\x0f\xd8\xcdxA\xc48\xe4\x82q\xf2\x99\xff\xf3\x11s\xff\x84\xb4\xe9X\xf1\xf8c,\xef\x96\x10\xbf\xf1\xf8\xfb%]\x7f\xf8\xfc pa\xac\xbc\x90\xff\xc7\xe0\x97j\xb6\xbf_\xbf\x8f\xc1\xe8\x93&[\xff\xf1\xd8}L\xd3\xff\xf8C\x19\xa9:i\xd6\x9f\xf5\x08c*\xee\xf4K\xff\x840\xb4\xd5ZM5l\x13\xff\xb6;\x0c*i\xd9:\x7f\xd9G\xe0\x95\xeb\x85]YW\xc9\xbe?\x05\xbf\xfe\xedS\xff\x1f\x84\xeeT\x92D\xc6\xf8\xbf\xf8G\x1e\x06\n\xda{\xa7\xff\x1d\x80=t\xd8sT\xff\xfe?\x11\xc5\xa6\x9b'\xff\xc7\xe1\xf6Y\xdd4\xd1*\x7f\xf0\x86\x0c\xe3\tWd\xc9S\x93\x7f\x8f\xd04\xdf}\xbf\xf1\xf8\xfe=\x954\xff\xc7\xe1\xa7\x99?\xb6\xdf\xf8C\x1bW]Z\xa7\xfe\x11\xd1\xab\xa7d\xff\xf6\xc2\x18aFj\x9d?\xfbq\xf8\xe7\x9fM\x93\xa6\x9f\xf8\xfc\x10\xaf7Y\xed\xed\x7f\xe1\r%t\xf4\xd3\xff\x8f\xd1\xcf\xf7\xf6\xd3\xff\x84p\xc4\x93e\xdf\xff\x8f\xc2\xdf2j\x9b\x92\x14\xff\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\x91C\xeb\xae\xfbz\xeb\xbe\xba\xeb\xbe\xfa\xef\xbe\xba\xeb\xae\xba\xeb\xae\xba\xe6\xefKKKO]u\xd7\\\x7f\xff\xe6\xdf'}\xf1\xdf\xff\x9b}\xf7\xdf}\xf5\xdf\\q$g\xef,?\xc2\n\n\xe4j\xd5\xaf\xfe=F\x1a\x194\xc9\xdd\xa7T\xfd< \xa1-\x15%Z\xf5\xff\x1c\xe8Mu\xff\xe3\x9ca\x93[\xb4\xaa\xb7\xfcs\x83k\xdf\xb2&\xfd< \xe3\r\xae\xd5\xaa\xfa}\xac!\x87\x89\"\xea\xd6\xcb\xfc~<\xd6\xee\xedK\x04_\xe3\xf0\xcb,\xd2\xaa\xff\xf8\xfce\xc6\xd3+\xb5Z}<!\x87\xa4\x8a\xd5\xedVM\xfc!\x82\x1d%6L\x9a\xbf\xfcwk\xff\xf8C\r\x15f\x9aIkRo\xa6M\xc7`\x95\x90\x0b3\xb4\xee\x89\xa4K\x7f\xc2\x18/\x95\x95\xa5\xa9`\xad\x85=?\x08a\xa5\x1b\xd9Y:|\x9b\xe1\x0c\x10\xfa\xe1\xa5Uj\xac\xbd%\xc7a\xdf{\xb5\xfd<~>$\xabT\xbb}\xbe\x11\xc4\xc1\0U\xd5\xdav\xdf\xd3\xe3\xb0\xc1\xe6\xa4\xdf\x93\x7f\x8e\xc1\xeb--\x95\x93\xff\x8e\xc2s\x12kO\xb4\x89i\xfe?\t\xd8[\x82fV\x93&T\xb5\xe3\xf0\xd1F\xb96\xda\xbd>\x9f\x08a3u\xec\xac\xbfO\x08c\x19\xec\x9f\xff\xc2\x18/D\x8a\xd7d\xac\xa4\xdf\xe1\x1c\xd7k\xbd\xfd?\xa3\x07\xc77\xe2l\xfb\x1fI\xf2a\x8f>\xbb\xef\xbe\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\x9e\x16\xff\xff\xd5yi\xcbO\xfe?@\xb7\x8c\xfb22\xcb\xa5\xdc\xba]kk\x0b8\x08}\xef\xcf\xfc\x9a\xfe\x03@n\rn\xf0kv\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xaa\xba\xeb\xa7\xae\xba\xeb\xae\x10\xc6\xfc\xba\xe9\xa2C\xb7\xf8\xfc\xd4\xe8\xb9\xe1\xfe\x17\xdenx:\x03\xd8\xdd\x03C\xdb\xf5T>\xc7\x8ep\xc8\xe9S\xa2,,~\xdf\xf0\xc6\x118(dZ&\xa9\xb24'\xdf>\xebC\xfc0\xe5\xbalfa4\xed\x17\xca\x8a\xf5\xb1\xfe\x18\xc1\x13\xb0\xc7\x82t\x90T\xe5?>\xf3\xee\xa8\x7f\xc28i\x1e\xe6\x82x\x12\xfc\xfb\xe1\x0cC{\x91\xe9\x9a\r?K\xcf\xbe\x18\xc6\xbdL\xd0s\xd3M\xcf\xb6\xfeTZ\xd8\xf6>\x10p\xea\x8c\x9d\x159\xe0h_>\xf8c\x0e\xa0\x01\x93\xba\x08\xb1\xcb\x90\x8f\xbf_[\x1f\xe3\xdc%\xe9oM6]=\xbcs\xff\xbf\xcb\x0c~\t\xb3\x18\xdb\xafZ\xe8\xf8\xfc\rR\x96ed\x8f{&{\xae;\x05T\"\x9f\xd9\xd1\xf4x\xe78\x9e\x9f\xdb\xd3\xd3\x8fp\xecE\x19Yt\xec\xbb|{\x87\xb4\xba\xfa?\xe3\xdc!`\xb8\x7f\xfb\xf1\xf8D\xe2\x16\xfd\x95v\x99q\xf9\x88\xf7\xd3\xdf,8\xec%\xc1+\xf7\xa3\xef\xc28!\x1e\x17/\xff~\x10\xc1\xac\x89\xd3\xd6\x89\xbbK\xc2\x18\xa9\xea\xcbF\xf6[\xf1\xd8\xf0\xe8\xe9\xfd\xbf\xa7\x1f\x83\xb52\xf5\xd9#mvO\x840\xaa\t{\xa7\xd2\xb7\xf8C\x05XE5e\xd9YvX\xfc$`\xe6\x9a?\xbb\xfe\x10\xc3T[.\xf6]\xf8\xec;L\xfau\xfa\xd3\x1d\x82\xac\"\x9d>\xce\xdfG\x841S\xec\xb4oe\xbf\x08ad\x12\xf4\xfa\xdb\xeb\xc7\xe1|F\xce\xd4\xb0\xa3\xee\xde\x10\xc2\x16\x0c)Z\xf7\xfb\xe1\x0c\n\xbe\xda\xff\xae\xcbk\xc3\xf7\xe5\x89\xeb3\x1fY8\xec\x14Q\xe46\xdd\xbd\xed\xf7o\x08a\x1e\to\xec\xa8\xff\x1f\x8f\xb4\xe9\xa6\xb5v\xdb\xd5\xf0\x86%%\xa6\x8bMK\x08[j\xd4v\x1b\xd2\xfd\x92?d\xf8\xec\x15P\x8an\x96\x8a\xed\xe8\xb8\xec;j5\xfa\xff\x1f\xf4\xdfM\x13o\xb6\x8b\x1d\x83\xaa\x9ak\xea\xba\xb2\xc7\xe1\xbc\xb7\xee\x9f\xbbx\xfch\x12\xffm\xd3%\x7f\x841S\xd7\xa3u\xec\xdf\x1d\x87\xb4\xb4\xfeX\x7f\x1d\x83\x14 \x9e\xf7M\xb5\xdd\xbc!\x82\xac\"\x9f\xef\xe8\xf1\xd8l\xb5\x1f\xae\x8f\xf1\xd8v\xd4\x7f\x7f\xf0\x86\x08=>F\xfa\xf6\xfa\xb2\xc7\xe1\xb3-\xfb\xa7\xee\xde\x10\xc1\xac\x89\xa2\xea^\x89=k\xc2\x18\xa9\xea\xcbF\xea\xcbw\xc7`\x91\xadV\x9f\xdb\xb5\xf5\xd7]u\xd7]u\xd7]u\xd7]u\xd7\\-\x85_&\xbac7\x16\r\xbe\xdf_\xb2\xc2\x0el\xfeh\xe51y\x8c\xc8b\xdf\x9fp\xc6!\xb3<\xb0s\xd8\xfd\x17\xfe\xac}\x97\x1f\xd3L\xf0|\x131\x9aL1\xf9\xf7\x0cb\x1bE\xa33\xe9\xd8\xff\xea\xc7\xfc H\xfa\xe8.\xff\xf0\xcb\x8d\x01\xc0\xbag\x83\xe1Wc\x9f}sM\x92\x10\x87\x1bG.Lq\xb0aA\xc5t\xb5v\x13\xea\xa9\xff\x1eJ\xa2\xa0'\x99y\x965\xc0\x80\xeee\xe6B\xea\x1e\xcb[\x98\xc6\xda$T\xf2\xc2=L\xd4\xbb\x1b\x07\xc2\xea\x19e\x8d\x14\xe0\xd9v6\xdb\xed\xe2\xf9\xc5\r\x80\xf3\x1d8O\x0b`\x11\xfbQ\x7f\r\x95\xc4\x83\x18OO\xea}\xf0Z\r@\xcb2\xc8\xf5i\xb4VVG\xabM\x85\x9c4\x8f\xaf#\xfe\xde\xb6>\x87\x85\xdd\xaahg\x81\xa0\x9b\xa0\xe8}=h}\x8f\x088f\xaf\xe9\xd1}\xbe?$w\xa6\x99Li{|!\xb4\x9c\xd04\x13M\xd0\xa3\xf3\xef\x843\xe7ENG\xfb~?\x1b\xf6\x86x\x0f\xe3\xa4\x82\xb7\xcf\xba\xc3\xef.\xba\xeb\xae\xba\xeb\xab\xae\xba\xe9\xeb\xae\xba\xeb\x8e\xc2\x05\x9d\xa62\xac1M7=\xcf\x9f\x7f\x860\x85d\xb4\x99`\xa6\xe3\x1f1\x9a\x0b\xf3\xee\xac}\x0f\x84q\xbf&c'\x83M\xd3^}\xfe\x17\xfa+\x08\xfc\xf0|?\xd6\x87\xf8]\xc3\xec\xb2i\xd24\x13M\xcfs\xe7\xdf\xea\x87\xfcvx\xa7\xdf\xdb\xfe\x16\xc1 \xcc0\xd2Lt\x8d\x02A7=\xcf\xffT6?\xc2\xf8e\x96\xcc\xf1\xcb\x91\xbc)\xb8\xc7\xeb\xfe\xb6>\x87\x85\xdcY`\xa0\xb4\xcf\nF3\xcc\xc1\xf7\xcf\xbe\xa8\x7f\xc2\x18L\xc7t\xf0*i\xcb\x06\xfb~\x10\xc1\x07\x7fi\x8c\xca}=$S\xef\xae\x18\xc1\x15\xe8\xf2i\xa8\xcd\xc4\xc70\xc7\xd2a\xff\xad\x97\xe1\x87BQ\xa3L\xcf\xbat\x17\xcf\xba\xb1\xff\x1d\x81\x1b\xf8\xacN\xcb\xff\x96\x14A\x05\x05Y\x1b\xfe\xb5\xf1\xea8\xcbd\xdfm\x93\xee\xae\xa3\x94#Q&\xed\xfak\xd7\x08)\x14\x7f\xa7k\xac{\x89\xe7\xed\xee\xd3\xaa\xb4\xbf\xfd:\x0b\n\xc5\xe9\xcc\xc2\xbcs\x8e/o\xdd]yt!\x86\xe4\x8b\xfe\xbal\x9a\x84r\x92\xfd\xbb\xbd\xdd\x13\xa2\x08b[\xdb\xfdk\xe3\xf0\xd4\n=\xbe\xdb$\xedI\x0bA\x0c\x10\xbc>\x92\xe9}\xedV\xd0G\x08Z\xbe?\xd92M\x93\xde\x10\xff\xfb_\x1d\x82gJ\xb6\xdak\xb4\xf6\x9ae\xb4\x10\xc0\x9d\xeaf\xed{\xb4\xedxG\r\xc9\x17\xfdt\xd95\x1f\x88I~\xdd\xde\xee\x89\xd1\x041-\xed\xfe\xb5\xf1\xf8j\x05\x1e\xdfm\x92v\xabh!\x82\x17\x87\xd2]/\xbd\xaa\xda\x08`\x8d\xa0\xdf\xec\x99Y=\xe3\xb0\x95I~\xdf\xf6\x94!\x817\xd7\x1e\xcf\x1f\xb2\xbbVV\x87\xe5+\xdb\xed\xc9\x04\xb2\xc2\x04\x94!\x8e\x9c\xff\xaf\xb2\xc29D;o\xb7M\xdaw\xba \x8e6\xd1\xb7\xfa\xb4\xaa\xc9Y\x0f\xc1\xd5\x9f\xec\x9d;\xa0\x8b\xea\x08a\xfa\xb7oZ-\xa5\xab\x8e\xc8\xcf\xff\xde\xe1\x0c\xf7\xb6\xfe\x9a&\xaa\xb5\x1d\x83U\xef\xed\xfb$\xed\x040%\xfa9[\x7fI\xcfW\xbb\xda\x1d\x85\xe8]\xbf\xadY2e\x1d\x80\x9b\xf5\x1e\xdb\xfb\xff]-\xad--\xad-\xad-\xad\xad\xac\x8bkKKKKKKKKKD\xd7]u\xd7]u\xd7]\xf7\xdf}\xbd\xad---\xad\xf7\xdf]\xf7\xdf]u\xd7]u\xd7]u\xd7Z\xa7\xae\xba\xeb\xae\x10\xc3L\xb7\xffog\x1f\x87r\xdf\xfd>m\x1f\xff\xf9\xa1\xef\x8f\xff\xf9w\xb7\x1f\xff\xffn?\xff\xed\xf4E\xd0\x87\xff\xfd8\xfc4\xcb\x7f\xed\x1bz\x7f\xff\x1f\x05\xb8\x87.\x06\x1c\x80\xc3\x96\x10\xaf\xc1W\x97\x84+\xf0U\xe5\x8fSg\xff.\xf8\xf5\xff\xf6\xf5\x85\xd4\x08\xf7\xa5\xdf\xfe\xde\xdbi\x80\x88\x08\xf0\x8e\xb7.\x11\xd6\xe49\xd8\xfe\xca\xcb\xec\xae?\x03\xde\xd1\xfe\xde\xad\xb6\xb1\xff\xfc\xd1\xb2}\xc9\x01\xf8\xd0\x92\xff\xadS\xd4#\xff\xdb\xfe\x10p\x99\x8bB\xdb\xfe\xc8\xb0o1\xee\x13\xea_\xed\xb6\xbf\x1e\xe1\x1b\x12?\xed\xf6\xed\x04p\xda?\xfbd\x84\xb6\xdb&C\xf3\x91\xff\xcd\xafL\xb0\xc7\xe0\x91\xa5\\\xff\xd6\xbf\x08a\xbf\x7f\xfd\xb7q\xf8+r\xdf\xe9\xcb\x0e\xaa?\x05\x9a[\xff\xb2\x97\xbe\x10\xc7\xb3\xff\xc9\x0f\x841<\xffnX+m\xb2p\x86\n\xb9\"\xff|\x90\xb6XT\x10\xc1\xdf?\xed\xab&\xdb\xb2\x08c\xa2K\xfd\xbb\xbbw\x8f\xc3\x89-\xffee\xf1\xf8\xeag\xfb\x7fZ\x841\xb1%\xffl\xb0\x9bu\x1f\x8e\xb5\xff\xd92\x97\xbe\x10\xc3\xa9\"\xff\xc9\x0bm\xac!\x8fe\xfbv\xdbVO,!\x0clI\x7fn\xb5\x94\xcd\xc2\x18lI\x17\xfd\xba\xb6\xdb&A\x0ctI~\xdd\xbb\xd9YG\xff\xf6\xff\x840\xcc0I\xa7\xfd\x92tv\xdd\xa0\x86\x15D\x97\xfdked?\x1a \xff\xfa\xd5\xc2\x18*\xe0\xc0_\xed\xcb\x04M\xea?\x1a\xc7\xff\xb6\xdb'\x1f\x88s\xfd;\xb5\xa2\x840\xeb\xa5\xf4\xfdv\xec\x82\x18\xd8\x18\n\x7f\xdb\xdd\xbb\xa2\x1d\x83\xab?\xdb\xaa\xb6\xda\xb2\x1f\x82_\x01\xa5\xbf\xf6F\xd4\xf7\x1f\x86\xe5j\xff\xadS\xcb\x01\xd8\x9e\x7f\xdbVM\xdd\xc7a\xef\x7f\xb7,>;\x05\x94H\xbf\xdb\xa7v\xde?\r\xc9\x17\xfawt\xd6\xa3\xf0\xdfK\xfd=i\xe3\xb5\xff\xfe\xe3\xb0\xd9=_\xe9\xf6\xdbVC\xf0v\xcf\xfd\x93\xeeX\x0e\xc1\xd5\x9f\xf6\xd15mT~\x08\xfc\xabo\xf9}\xe9\xdcv\x0e\xac\xffn\xd1`\xda\xea\xba\xeb\xae\xba\xeb\xae\xba\xe9h\x9az\xeb\xae\xba\xeb\x8e\xd3\xff\xfc\xdb\x1d\xff\xf3o\xa6?\xff\xe5\x87x\xef\xff\xf9\xb6;\r2\xdf\xfb\x1fi1\xcf\xff\xe6\xdf\x1d\x86\x99o\xfc\xdb\xd3L~\x1d\xcb\x7f\xf3\xee\xd3al\x01\x93\xfdz\xff\xd3N\x9e\x01\xc0?\x08W\xe3\x84+\xf0\x17_\xff\xf2\xea\xf4/B\x85\xd7\xff\x9bZ\xf5\xd8L-\x84\xc2\x1e\xbf\xfc\xd8\x9f6\x85\x9c\x04-|{\xfd=i\xf8\r\x01\xb8|\xe9x|\xe9c\xb7\xff\xda6\xf5\x1d\x8d5\xff\xcf\xaf\x9bc\xb0\xd3-\xff\x9bzc7\x07\x7f\xfd\xdb\xe6\xd7\xc7\x7f\xfc\xdb\xf5\xd7]u\xd7]uU\xd7]=u\xd7]p\x86p\0+\xb6H\x11\xfb|\xdb\xe1\x0c>\xea\xa1\x9e\r\xf3\x9f\xb7\xfaf\xdc\x1d:\xe7\xf8\xdb\x1c\xdaS0\xbf.*\x1f\xf1\xf8\x0f\xaaY\x17D\xfe\x9a~\x18\xc8\x1eo\x9es\xf6\xe9\x1a\x15\xe9\xcf\xb4\xd6\x87\xfc\x16\x12v\xdc\"\xb6&\xa8mP\x8e\xcf\xdbf?N\xa5i\x18\xfbu\xb9\xff\xcd\xbc\xdb\x08aw\xc6y\x9fo\xb7\xfe\x98_a2t\x0f\x1d\x12\xd1c\xb7T\xdd\xebmP\xfb\x1f\x0c`\x06F\xab\xa5\xbfYk\xe7\xd6\xe4\xfa}\x8f#\x163\x9694\xe5\x87\x82\x01\x93B\xea\rv\xaf\xa6\x9b\xfe\x9fO\x14\xc6\x83\x0bO\xc0\xedKEt\xbe\x17Q\xc0A\x192e$\x11y\xb7\xeb\x19\x99\xe3c\xc38H\xb2\xad\x16\x14\xec\xb9\xf4\xfb6\x9f~dr\x15\xec\x19\xb8\xe4)\xfb7\x1c\xe71\xfa\xcd\x0c\x8f\xcd\x0c!\x88h\x9f\xa7\xff\xc7\xe4\xa2i\xf4\xfd\x97v\x87\xe1;\x84\xb3}\xbf\xfaQ\xd9(\x9fo\xed|{\x90\"\x9f\xa7\xffiB\x0eJ'\xff\xfc{\xbd>\x9f\xbbZ\xc7\xeecn\x99\xbf\xffj?_m\xbf\xbe\xd4\x7fO\xfe\xd2\xf8\xfd\xaf\xa7\xf6\xb7h!\xacE\xf4\xd5?\xb5\xe3\xf7o\xdb\xff\xc7\xf1G\xdb\xff\xe1\x0c\xb6\x9a\x7f\xb7}\xb6P\x86\x13p\x01\xa9\xfa|\xba\xf1xC\x1e\x04\xba\x7f\xfe\xd4~zz\x7f\xbe\xd4\x7fO\xfe\xd2\xf8\xfc\xfb\xff\xda\xdd\xa1\xf8y\x11*}?K\xa5.0\x8a?T\xfa\x7f\xf6\xa3\xf44\xfd?e\xf1\xf8\xf8$7\xdb\xfb\xb5\xda.1`~\x100z?e\xf6\x9fj\x10\xc3\xb9d\xff\xedv\xa3\xf1\x86\xa9\xa7\xd3\xfb[\xb4\x10\xc7lS\xff\xb5\xab\x840\xc3,\x9fO\xffq\xf8mE\xf5O\xb5\xdaP\x86\x1d\xcb\x7f\xed|~\x1d\x8aUO\xa7\xee\xd7h!\x87Yo\xa7\xf6^?\x0cE*\xb7\xdb\xfb\xfb\xe3\xf1\x86\xa9\xc7\xd3\xff\xc7\xf6\xff\xff\xbeM\xc7\xe1\x8c\xb2i\xf4\xff\xf1\xff\xdb\xff\xe3\xf1\xf6\xad\xf6\xdb\xff\xc9\xb8\xfc1\x96O\xa7\xff\xde>\xd4~0\xd6\x9fO\xff\x1f\xed\xf6\xff\xf1\xfd?O\xff\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xa7\xae\xba\xeb\xae\xb8[\0|\xed\xc1\xcf\xcf\x06_\xfa\xd0\xff\x0c\xbb;\x8d+\x7f\xff[\x1f\xe3\xdc\x84Qs\xc0\xf0\xb7\xfe?\tZ\x9e\xf4\xe61E\xff\x8f\xc7\xda\x07.}\x8f\xff\x8fu\x9c\xc7z\x7f\xf1\xf9hc\x14T\xd6\x8b\xfe\x17\xd9\xd9Y\x1a\x1f\xffV^\xc7\x85\xf0\x89\x89\xfd#\xfb$\xd3\xf9\xf7{\x19\xcb\x1c\xe5\x8c.\xa1\x8c\xb2\xf7\xff\xf4\x8b1\xa2k5\xe0\x80Lh\x9a\xcd\x0b\xad\xfb&L\xbf\xea\x81t\x9f\xa0]'\xe1uA\x96d!e\x86\x9f\xff\xa7e\x0f;$v\x16\xc1:\xe4\xb6\xcbm\xf9\xf7\xfdN\xc3\x97\xf0\xbb\x84\xefOd\xe8\x1e=\x17\xfe\xa8}\x8f\x842D\x0c\x07\x8c\xcb\xcf\x06M\xff\xe3\xf0z\xa9gA\x13j\xb0h\xbf\xe3\xf4\xdd'\x98\xbbut-\xff\xc3\x18\x84\xff\xc3Rr|\xd8F=}\x8f\x86r)<\x19\x7f\xfe\xa8\x7f\xd7]u\xd7]u\xd5\xd7]t\xf5\xd7]u\xc2\x18\xaa\x98\xfc\xa6L\xf1\xcb\x9d\x7f\xe1}{B\x9b\x8c\x7f|\x1f\x0f\xfd}\x0f\x8f\xc8\x1a4\x1ck\xaad\xff\xe1\x1c\xbdH\xfeG\x91\xff\xf8\xfc>\xf3#\x1az\xd1\x7f\xf1\xfbC7>\xff\xfc~\x04\xbf\xd2\xe1\xcf\x9e\x053Z\xc9\xdd\xa6\x7f\xe1\x8c.\xb5\xed\xb21\xab\x7f\xea\xc0\xba\x02\xe1\x9d\x84\\\xf6?\xff\xfdX\xff\x86\x14?\x963\xdd\r\xd03\xff\xf5e\x0b\xb1\xe1\x87*\xd2\xd8\xf4<\xf0<\x10O\x87\x9f}}\x0f\x85\xf4\xe7P\xe3\xf6\x99\xf6\xff\xd6\xc0\xba\x02\xc2zL\x9d\x0c\xcf3\xff\xff\xe1\x14\xe9\x0f\xd8{\xb7\x8f\xc2\xebZ\xff\xfe?`\xd9>\xeb\xec\xbe\x10\xc1>\x87\xa6\xaf_\xfc\x9b\x8fre\xee\xab\xff\x84\x1c)k\xec\x89\xb4\xff\xc2\x0f\x15\xad>\xd7\xf8G\x0f\xa0\xddW\xb2\xff\xc29-\xdf,\x11\x7f\xe3\xf1\xf6\xaa\xbf\xff\x8f\xdae\xa7Z\x7f\xe1\x0c?\x17J\xf2m~\xfe\x11\xc6|\xc9\x96\xff\xfc\x9b\x8f\xc3\x10`'\x93l\xb2o\xf8C\x0c<\xe9d\xdf\xff\x1f\x82v\x80\xdd\x15{/\xfc~BN\xf9`\x8b\xff\x1f\x87\xd9e_\xff\xc7\xe7$\xcbN\xb4\xff\xc7a6\tk\xc9\xb5\xff\xc7\xe0\xf8\x8b&[\xff\xf1\xf8\xfe>\xa4\xdf\xfc#\x8c\xfd\x97\xe9\xfe\xf0\x8eeu\xa6XE\xa7\xfe;\x1a9\xfb/\xfc!\x8cz\xe9\xcb\x04_\xf8\xfc\x7f\xd5N\xac\xbf\xf1\xf8\x19\x972w\xb96M\xff\x08i\x16\x1e\x9a\xff\xf0\x86\x87\xf7\xf6_\x08e\xc6\xcb\x02oZ\xa7\xff\x08c\rU\x96\xc9\xff\xf0\x860\xd5\xc9\xb2j#}?\xf0\x86\x13p\x96\xb2\xec\x93\xffp\x86\x18e\x89\xb6\x9d\xe9\xff\xc7\x7f\xfe\xbe\xfb\xef\xae\xba\xef\xae\xbb\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba&\xba\xeb\xae\xba\xebC}\xf7\xdfo}\xf6\xb6\xb6\xb6\xb6\xb5\xd7]u\xdf]u\xd7]u\xd7]u\xd7O]u\xd7\\~\ti\xcb\x97\xfc\x86\xa37\x18\xeb.6c\xb0C\xfa?\xf1\x9b\x8dE\xcd\x01\xd8i\x96\xff\xdbc\xd8\x99\x860W\xcb\x7f\xe4yXe\xa4\xda\xf4=\x0e=\xff\xf9\x99,1\x8b\xb0\xc2\x18\x10\xfb~\x7f\xfe\xc8\xdf\xa8\xfcl\x0c\x01\xff\xc7M\xcanmD\xc8v\x02/\xd9\xb57\xfe\xdfQ\xd3p\xfc\xb9\xff\xc2,\xea\x7fHv\x1ae\xbf\xf3=\x07\xb9Q\x0eP\xd3-\xff\xd7<\xdb\xfe8S\x01\x7f.l\xf23\x19L\xf8\x12 2\xc8\x0c\xb2\x97F\xf4\x8e]\n(#\t\xa8\xf3/\xfc\xcaE\xbccVns\xc5\xa1LC\xd8/\xcd\xfd\xb8\x17@]dc\x8cS\x08\xe1\x89\"\xadj\x8f\xfe\x10\xc1\xf62F\xc9\x9b\xa6\xeb\xfe?\x04\xed*\xda\xb4m\x9e\xb4\x7f\xe3\xb0\xc4\x91'n\xb5\xff\x8epz\xc4\xdd\xb7M[_\xfdj\xe2\x91\xfe\xc2Qy \xfc\xf89\xc3\x1et\xedW\xfd<!\x84\xe5\x13\xca\xce\x8d6M\xb2\xff\x1f\x83\xecF\xec\xdd4E\x84/\xf1\xf8:\xf15U\xaa?\xf8\xfc1\x96\xa7m\xd3\xb7\xfe\x10\xc1|H\xaf{:?\xf1\xd8\x112\x92\xea\xca\xc9\x1d\xff\xe3\xbav\xff\xfe;\x07\x96+%d\xfd\x7f\x8f\xc7\xc4\x83\xa4\xed\xb3Z\xff\x8e\xc6\x0eW\xff\xf8\xfdSv\xdd4M\xa2\xff\x1d\x83\xd6&\xaa\xb5V_\xe3\xb0z\xc7\xee\x9b\xb7\xfe?8j\xa9\x92\xad\xbe\xff\xe3\xb0z\xc5d\xac\x91\xbb7\xff\x1d\x86<\x9c\xb0\xff\xf8C\x07\xac\xabj\xe9\xbb\x7f\xe1\x0c\x17\xc4\x8b|\x9da\xff\x840M\xae\xdd\x1a\xff\xf0\x86\x1e\xe9^\xe9\xa2m\x17\xf8\xfe\x9a\xaa\xd7\xff\x1f\x80}J\xe6d\x8d\x93\xban\xdf\xda\xc7`\xbd\x12$I\"\xab:?\xf1\xd8fK}kEE\xf1\xd8'\xf7oN\xdf\xfc~\x0f\xb1\x9a\xa3VH\xd9?\xf8\xec\x1e\xb1\xd3r\xc1\x12P\xbf\xe3\xf1\xf1 l=\xd1\x9b_\x95\xdf\xf8\xec\x1e\xb17m\xd2D\xdf\xfcv\x18\xf2v\xff{\xfa\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xe9h\x9az\xeb\xae\xba\xeb\xae\xba\xe9\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xa7\xae\xba\xeb\xae?\x0f\xb2\xdf\x85\x0b\xff\x1f\xa7e\xa0\xe2\xdd\xd0\xff\xf0\x82\x7f\xf8{\x0f\x8f\xc9\x94=\x92_\xf8\xff{amm?\xfc!\x87\xf2\xc7\x8c\xf5\xff\xc7\xe82\xd1A\xf1\x1e?\xf8\xfd\x06Y\x9a\x9eN\xcd\xff\xc7\xfbeWc\xf9\xff\xf1\xfa\x0c\xb4i\xe9\xb3\x7f\xf1\xfc\xf8\xec\xdb\x7f\xff\x85\x06?\xf8j\xad\xf6\xa9\xd6b\x0f\x9bR*\x97\xd5\x99\x14i~\x13W\xb5\xed\x7f\xff<\x7f\xff\r\xdb\xd3\xaet\x8cS\xea)\xf0\x83\x82\x1f+h\xdd{\xda\xee\xd6\x10\xc2:\x8d\xab[n\x82i\xad\xda\xc2\x18\xef\xed\xa2\xcf\x15\xa5\xea\xf8\xeci\xa3\xfb\xb4\xde]\xbc \xe0\xb35[\xd17\xabH\xba\xe3\xdc:E\x10\xdb%d\xdbn\x9b\\\xf9\xe1\x07\x04\xcd\0\x1b[w\xa5wk\xb5\x84pF\xf3s[\xab+-\xaf\xc2\x19\xa9\xfd\xd7\xb5\xc7\xe4+\xd7\xeb\xf8\xfc3\x96d\xdb'\xb6\xeb\xee\xb8\xec#\xa0\x96\xb6\x9a\xf5\xff\x08hZ\x7fk\xaf\x1d\x85\xfd\xdd\xb5\xab]\xa5\xc7`v\xbd\xf6\xd9'\xf6\xb1\xf9\xc0\0\xa7?t\xe5\x8d\xb9\xe9p\x86\x05\x19\x0f\x06Z\xed\xdd|\xf9\x8e\xc8\xa1\xba\x7f\xfb\\v\x1b\xd2\xfe\xbe\xd7\x1f\x82J\xaf\xc8\xfd\xbb\xdb{\xb5\xbbX\xfc&srz\xd9&\xcb\xd2.c\xb1\xa3G\xf7i\xbc\xbbxC\rQ\x9e\xe8\x9b\xa0\x95\xae\xd7\x1f\x81\xac\xa5\xb5Od\xf6\xbf\x08a\xea5\xdd\xed\xa2A;]\xacv\t\xf5\x95\xb5e\xa7\xb5\xf9;\xef\xae\xb9;\xef\xbe\xfb\xef\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xbaZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ\xeb\xae\xbaz\xeb\xae\xba\xff\xfe\x14\x8f\xe3\xbe\xe2\xd0\xd3:\xc4\xccY\x97^\xc7\xe3\xdc\x0cS\x96\xff\xd1s\xc0\xa6!\x1d/\xfd\xcd\x0f\x1f\x9a?\xf4\xf4\xcce\xdf\x0f\xe30\x0f\xfe_\x92\xfc\xeaZ\xd0m\x83\xa2\x81(\x8bA\x0e\x96\x11\x16\x82\x1d\x1d\xb8\xc6\x85\xd4i\xaf\xfd\xb5[s\x18\xe4ml\x04\xc7\xb0\x13\x1f\x1f\x9d\x81\xfa\x0e\xda\xc1\x95\x86;\x17*\xe5C\x15\xd0\xf6\r\x0f\xfd~\x01A\x0f>\xe3\xc9\x95\xc9\x83d\x13\x19g0\x98f\xa3\x01\xaa\x19&\xa3\x01\xa2\xb2\x06\\hI\x7f\xad\xd04\x13\xba\x15\xffG\x0c\xe5\xcf\xf2@r\xe1\x9e\xe7\xc7s\xc6n.\xc6\xc7\xe1\x07\x07\xf9\xfec6\x9fzf\x83\xa0\x18Q\x12?\xf3<\xd0s\xf4N\xba.\xc7\x0ba\x175\xffy\xe0c)\xbe\x14\x97\xa1\xf8\xe7\x0c\x89\t\xfe\x9c\xd0\xdf\x08(\xf02\xed\xdb\xbdi\xdfLz\x82Q\xe2\xdbu\xed\xd7v\x9b\x84\x14? \xbb}\x92%\xd5\x950\x82\x8f2\xff\xd3n\xe53\x18\xf52-\xbe\xdd\xd1j\xad\xc7\xe3\xc2\t\xb6\xcbm\xb5e\xbe\xd8\xf7\x08x\x11\xdf\xb6\x9a\t\xde\x9a\xbd0\x86\x11\xbb\xce;{-i\xb2\xa7\x1f\xffo\xf7N?B\xdb\xed\xb7T\xebN?\x1ce\x9a?d\xe9\xa6\xe4\x82q\x8f\xd8\xba\xe9\xea\xde\xb8\xed\x83\xdb\xfe\x9f\xc7a\xf8\x126\xfbkt\xf5O\xeb\xc4\x9c\xf9\xef\x9b9\xb3\xd2.1\xf8\xfc\x0c\xf8\x124\xfaw}\x17\x1f\x90\x83\x93\xfdW\xbe;8\x0bo\xb7\xfd8\xec\x15j_\xb6\xcb\xd5\x92i\x8f\xc3p\0\xdbm\xf6\xd9\x1bw\xb7\x1f\x8c\x80\xae\x9fNX+uV\xe3\xf0\x1f\xf4\xb6h\xfe\x93-7\xc7a\xf6am\xfc\x90\xa7\xcaf\x11\xcdM\xb6\xfbj\xc94\xec\x93L~\x1b\xcb~\x9d\xd8\xf4Ma\x0c\xbf\xfd\x7f\x8e\xc0\x8d\xf41\xae\xfah\xa7\x87\xa2N\x10\xc4\xa4\xba\xe8\xd55\xddq\xd8J\xd7\x1f\xba~\xe9\xd3\x08a\x1b\x12n\xdf\xf4\xec\xae\x10\xcf}\xbd\xba\xb2\xdd\xf0\x86\t\x9e\x016\xdb\xed\xdd\x12v\x958\xec!V/\xed\xfd\x92i\x8f\xc6\xdd}=;\xdb\x96\n\xdcv8\x98\xfe\xdf\xd9S\x08a+\0-\xfbwt\xed\"N;\x0fO\x8e\xdf\xd6\x9f\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]t\xf5\xd7]u\xdf\x1f\xbf\xcf\xbf\xf8\xfeY\xbf\xff\xe3\xf97\xff\xfd\xf0!\xff\xd0+\xd3\xc0Y\x10C\xcd\x8f\x99\xf4\xd9\xb8]\x7fO\xff_\xc6\x9e=cx\xfbu\xff\xe1u\xff\xbf\xfe\xb5\x9a}x\xfd\x06[\xe7\xdf\xfe\xf8\xfe}\xff\xff\x1f\xb9\xf7\xff\xfd\xfa\x87\x0f\xfe\t\xec\xffl#\x985\xfbv\xab{\xc7\xe0\xd5!u\xfa\xd5\xdarhC\x15_\xf6\x91-\x92\xb2\x1f\x87z_\xff\xdc~\x1ae\xbf\xda\xd14\xaa\xa1\x0c\x1d,\xffi\x92\xb2\xb4\xf1\xeee\xff\xb9v\xee\x96\xe1\x0c6:_\xf6\xaa\xca\xca?6\x7f\xafi\xee?\x0e$\x8b\xfe\xb5\xf1\xff\xfd\x93L\x9d\xdau\x1f\x82?*\xdb\xfe\xb5KP\x86\xd7\xfb]x\xfc\xdf\xfd\xad\xdaZ\x840ug\xff\xdae\x1f\xff\xcb\x97t\xa8\xa3\xf2\x06\x03\xfeL\xad'\xb8\xec>\x91\x7f\xedv\xb8\xfc7\xef\xdb\xff4\x07\xe05M\x0b\xb6\xdb}\xb6OI7J\xe1\x0c6\x95\xab\xf5.\xdf\xae\x11\xcaK\xfd\x93$\xd9;\xa7\x08a-\x926\xfe\x95\xedq\xd8l\xf7\xff\xb2i\x93\x840B\xfa\xf6\x7f\xee\x87\xdb\xc2\x18\xfc\x0b\xaf\xfd\x92\xb2\x08a.$w\xff[(C\x07l\xffj\xb6\xaa\xc8!\x821\xa4;}\xec\xac\x9e\xb6A\x0c6I\x17\xfd\xbf\xa8\xfc%\xf6\xaf\xfbL\xac\xafq\xd8zV\xdf\xebZ\xde\x10\xc1\xd5\x9f\xfb\xab'xC\x1fG\xcb\xbe\xf5\xbb\xd5\\!\x8d\x89/\xfe\xf6\x96\x11\xca\xb7\xed\xefz\xa4\xa1\x0c:I\x17\xfa\xdf\xba\xff\xf6\x0e0\xaeO\x9b\xb3\xa3\x08cbK\xfe\xb7\xea;\x04l\x87\xc1\xd9{'e\xba\xc28V\x85\xfbv\xf7\xaaK\xeb\xac)D\xad\xf6\x97c\xa6\xc6\x8d\x0f\xa6;\x05TH\xbf\xb6\xed\xf6VA\x1c\x10\xf9:\xbf\xebI\x95Y\x0e\xc3\xa4\x91w\xf6\xaf[(\xfc\x16bE\xfbv\xfb\xde?\x04m&\xbf{+-l\x87`\xaa\x89\x17\xfd\xbf\xa8\xfc\x01V\xbe\xa7y\xfd\xd9Y2\xde\x10\xc1\xdb?n\xae\xc9\xea\x92\x8e\xc3\xa4AZ\xff\xae\xea?\x03\xbae\xdb\xf7\xbaH\x89\x04U\x0f\xc3\x08\xa6\x7f\xd9*\x93\x19\x974\xa2\x08\xe3\x82C\xfe\xeboq\xd8,\xa2E\xfe\xd5~? `?\xbd\xb6\x93j\xb6C\xb0UD\x8b\xfbv\xfe\xa3\xf0&\xf4\x8d\xf1\xa6\x9fMY2e|v\xbf\xe8\x7f\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7O]u\xd7]w\xd7]\xf7\xdf}\xf7\xdf|\x9cr\xfe\xb5\xfa\xe3\xd4\x12i_\xd2\x7f\xf4\xed^\x10P\x89\xe3d\xc9\xbeM\xea\x9a\xee\x90AR\x8c\xb7\xffD\x9d\x92\x9a!\x05F\x9b[_O\xe3\xd4;\x96O\xffE\xa6\xa3\xd4:e\x93\xe9\xfb&l\xb7L~u\x14\xf97\xcf\xf7m\xc7a\x03\xf9\xa5\xf7\x85E\xbd\x9f\x8f\xff\xfa\xf4\xdc~\xcf\xff\xafP\x86:\xd5?Oed\x8ft\xc7\xecM\xf6\xff]\xb3\xd4vZ\x7f\xe9\xf5\x8f\xc7\x97\xd3\xfaoT\xd4!\x83{_\xa7\xf5\xe9\x8f\xcfF\xfb\x7f?\xe5\x8c~J7\xfdf\xed\xe6\xe7\xe3\xb0\xd2\"\x9f\xfa}8\xfc;\xa5\xe9\xff\xf5\x08a\xc6;\xf4\xf7\xba~?\x1b\x12\r\xb7\xb6\xdf\xd6\xcah\x840\xee[\xffM5\xab\x8f\xc3L\xb2\x7f\xf4\xd1i\xa8\xfd\xbfO\xfbR\xc2\x10\xc7Z\xff\xee\x9e\x891\xf9\xc4\xbf\xf3u\xcf\x16\xc2\x1b\xfb\xff\xf0\x8e\x105\x04\xde\x92\xff\xe3\xf1\x86\xa9\xa7\xdf\xffx\x0e\xb6\xe5\x9f\x1f\xa4\x9f\xaf\xfeM\xc7\xfa\x7f\xff\x8f\xeb\xff\xfc\x7fO\xa7\xff\xc7\xfa\xff\xfe?\xa6M\xe4\xdf\xfc#\xb5\xeb\xff\xdf\x1f\xfd?\xfe\xfb\xe3\xf4\xbe\xcb\xff\x08\xea\x9f\x7f\xfe?\xf95?\xfc\x7fo\xb6\xff\xf8\xfc>\xcb6\xde\xdf\xff\x1f\xdb\xf6\xff\xf1\xfd\xfa\x7f\xfd\xf1\xfe\x9f\xff\xef\xbe?\xa7\xff\xfc\x7f\xfb\xff\xe3\xf0\xfb-\xf4\xff\xf1\xfd\xb6\xfb\x7f\xf97]u\xd7]u\xd7\\vo\xff\xebZ\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\x9e\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xe3\xb3(\xfe\xbf+\xe5x\xfcK\x8d\xf7o\xff\x1f\xeb\x97\xff\xf8C\x18j\x89u\xbf\xfc!\x8c\x06\x85\xbd;\xa7\xff\x1f\x87\xd9j-W\xff\x1f\x862\xc8\xd9o\xff\xc7\xf7o\xbf\xfe?\x0f\x8c\xb34{/\xfe\x10\xeb\xdb\x7f\xfc\x7f\xae\x8f\xff\x8f\xec\x99\xee\xbf\xf8\xfc\x04\xfe\xa07\xad\xa8\xfa?\xfc!\xbb}\x7f\xf8\xfca\xabo\xb6\xbf\xf8\xfc0e\x91\xfb\x7f\xf8\xffo\xe4\x8f\xff\x1f\xc9\xd9^;\xff\xc7dQ\xed\xff\xf1\xf8\x12\xb5\xbf?\xdb_\xfc~\xae\xde\xff\xfc\x7fm{\xff\xe3\xf0\xfb,\xdbz\xbf\xfe?\x01\xd7\xf2\xc5\x84-\xb5k\xfe\x10\xfe\xed\xff\xe3\xf0\xc6X\xbf\xc9\x1f\xff\x1f\x9d\x01<\xd5\xd1\x8f\xff\xad\xc9\xc9\xdf}\xf7\xdf}\xf7\xdf}\xf7\xdf}\xf7\xdf}\xf7\xdf}\xf7\xdf}\xf7\xdf}u\xd7]u\xd7]u\x95u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]=u\xd7\x1d\x80\x91\xeb\x8f\x7f\xff\x17\xff\x89\xa2\xc6\xf0\xacL\x8d\x11\x96a\"\xe6\x03$Go\xff\xd3\xf0\x87\xff\xd3\xe9\xc7\xff\xff\xe9\xbe/\x1aj\xbd\xbe\x9a\xeb\xae\xba\xeb\xae\xb8\xef\xff\xfcr\xe2\xeb\x93\xbe\xfb\xef\xbe\xfb\xef\xbe\xfb\xef\xbe\xfb\xef\xbe\xfb\xef\xbe\xfb\xef\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xfa\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\x9e\xba\xeb\xbe?N\xcb?|\xfb_\xff\xc2z\0a\xe1\xaag\xdb\x95\x81\x9b\x95\xe4GCw(\xf9\x98C\xc2\xea\r\x7f\xd5m&\x8a7\xc5\xc6K\xf7\xffT\x19\x8cs!A}\xa4\x88\x83\xfe\x1a\x97\xa2\xd9&\xd6Du\xe3\x02!\xcc{\xfcC\xf8 \xd6+vT\xd6D\xb8\xf4?4\x06a\xf8g\x0e\xca\xd0\xdb\xa6\xfa\xa7\xfe\xaaN\xd7^\xf7\xa0c\xf4\xf5\xd7]u\xd7_\x08`\x1f\xf0\xff\xbd\xe3\xac\x9f}\xf7\xdf}\xf7\xdf}\xf7\xdf}\xf7\xdf}\xf7\xdf}\xf7\xdf}\xf7\xdf}\xf7\xdf}\xf7\xdf}\xf7\xdf}\xf7\xdf}\xf7\xdf}\xf7\xdf}\xf7\xdf}\xf7\xdf}\xf7\xdf}\xf7\xaa\xc9\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]=u\xd7]u\xdf}\xf6\xb5\xd7]u\xd7\\\x9dw\xdf}\xf7\xdf}\xf7\xdf}\xf7\xdf}\xf7\xdf}\xf7\xdf}\xf7\xdf}\xf7\xdf}\xf7\xdf}\xf7\xdf}\xf7\xdf}\xf7\xdf}\xf7\xdf}\xf7\xdf}\xf7\xdf}\xf7\xdf}\xf7\xdf}\xf5\xdf]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]n\x9e\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xef\xbe\xfb\xef\xbe\xfb\xef\xbe\xfb\xef\xbe\xfb\xef\xbe\xfb\xef\xbe\xfb\xef\xbe\xfb\xef\xbe\xfb\xef\xbe\xfb\xef\xbe\xfb\xef\xbe\xfb\xef\xbe\xfb\xef\xbe\xfb\xef\xbe\xfb\xef\xbe\xfb\xef\xbe\xfb\xef\xbe\xfb\xef\xbe\xfa\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xb9\xbdWO]u\xd7\\v\t\x19\xaa\xe5\xc8k})\x8d&\x7f\xb8G\x02\xdf\xa5\xffi\xb4\xad\xd2\x08`$\xd6\xd6\xd7\x7fC<P\xed\x95\x81\xc2\x18=\xe7\xfa\xe8\xbc~P\xd7\xf9\x0c\xa35\xe9\xdb\x8f\xc3\x89\"\xff!\xa1\xc7\xc9\x8dv\x94vPC\x04\x9fI\x7f\xa3)\x8e=\x16\x8bP\xc6\x0c\xfe\xeb\xf6VJ\xab]\x81\xf4\x06\xc6\x16p3\xbe\xffa\x91\xe9o\xd7c\xf8_\x04{\xfbl\xfe\xcax\xcd\x05Z\xe8~\xc6\x16pB\xcd?_\xe3\xe6_\x19\xb8\xa6\xe7k\xfd\x0cs\x82\x93 \xdf\xd5\xa8\x99Dx\xb4\x8a$A\x8c\xb9\xfb\xc6n1\xfd\xf0\xba\xaf]\x0e\x17p:\xa6\x8f\xf6\x8c\xc2Te\x9a8U\xec~\x11q\xf7m\x17\xcb\x0e\xdb#[\xe2;\x05\xae[\xfd\xb31\x16\xc6\xa8\x941\x88\xdf\xfb\r\x1aV\xde\xeb\xb1\xfdu\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7D\xd14\xf5\xd7]u\xdf}\xf7\xdf}\xf7\xdf}\xf7\xdf}\xf7\xdf]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd3\xd3\xd3\xd7]u\xd7\xedZ<\x107[\xc7}'\xd3\xe9\x19\x9e\xcd\xb2\x90\xe1\x8c\x19v&\xd4\xeft\xed\xf7}\x7f\xa1\x85\xdc\x16\xb9l\xb4?\xdc\xfe\xefv\xb0\xde\xbf\xa1\xc2\xf8?\xa6d\xa5\xfac=m\x83}\xde\xbf\xd0\xc2\x0f\xd4\xf7\xff\xf7\xdf}\xf7\xdf}\xf7\xdf}\xf5\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]===u\xd7]w\xdf}\xf5\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xc2\xdf\xff\xfak\xc6\x7f\xc2G\xe0]CL\xb7\xfe\x9azi\x99=\t\x85\xbc\xd1\xcd5\xb5\x85\x9f\xff\xa7\xf5\xcf^\x1175\xd7]p\xb6\x1ae\xbf\xfazi\x99\x19c?&e\xe1#\xf0\x99\x96\xd6\xd6\x17_\xff\xf6\xd7\x9a\xbc5\xc4\x9e\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xe1l4\xcb\x7f\xe9\xa7\xa6\x99\x91\x96].\xe5\xd2\xea\xaa\xe3\x9c\x11<\x9a\xff\xfa;4\xf4\xf5\xd7]u\xc2\xd8dt\xad\xc8\xf64\xd9\x07?\xfdl\x7f\x84\x1c\"v\x9bD\xfd\xbf\xf1\xfa\x07\x9a=3\x19m\xbe\x82\xc2\x18?\xa7}\x1b/o\x8f\xc7\x9a6\x11\x98\xeaCNco\x8e\xc3\x8d/6\xd9\xb2\xf6\xd9a\x0c\xb6m\xd2c\xee\xdf\xb7\x8f\xc0\x837-\xac\xac\x9a\x99\xe8\xac\xbf\x840\xca\x8dNxv_o\x1d\x87\x8586\xdc\x7f\x99\xe6}~\xde\x10\xc2\xaf\xbd9\xccY7\xdb\xe1\x8c'\xe0E\x93\xdd\ns<\xcfo\xfa\xa1\xf6>;\x1dD\xcc\xc7\xbb}\xbe;\x03{\0\x0cm\xda\x1as\x1aD\xfd\xbe?\txPM\xaa\x19\xf3J\xdf\xbe?\x0ea\x9f\xad\x97\xb7\xc2\x18\xd7\x93\x9a\x0bNG\xfd\xbc/\x84Os!\xe1!\xdb9\x8d/\xf5\xf4>;\x04\xdbj\xbc\xdb1\x8f\xdb\xe3\xb0\xab\xe5\x99\xe4|\xda\x86\xf8[\xdb\xf0\xbe@@\x97t\xa96g\xb9\xed\xb7\xd7\xebc\xfc{\x86Yl\x8f#\xd3\xbe\x07\x83\x7f\xe1|\x107S]\x95\x95\xbex\xebe\xf8Y\xc2{8g\xdc\xfahd|/\xb7\xd6\xc7\xd0\xf0\x83\x8d\xfa\x9a\x19\xe0m\xbe\x0c\xbd\xbe\x19p\xd2n:#B\xb9A6\xf9\xa1\x1c\xfa\xb8\xe3Fvxh\xe0\x17S\x91M6\x13\t9\xce0\xbf\xe3\xec\x0e$\xa0\x1d\x03f\xc4\x17Q\xa3\t\xa6\xc9n\xbby\xbf.[\x19\x18i\xdba\xa5\x96\x9d\xff\xf1\xfa\x1bG?cV\xaci><\x89\x93Z\xc5\xd5\xda\xe51\xc6\x16p\x91\xe3b\xc0\xdbGO\xab\x1bm\xfd\\\xc4\x95\xee\xc4\x91\xec!\x8d\xfc\xdbt\x18\xf8\xe5\xc6\xff\xc7\xe2\xb4\xeey\x1fr=\xf0\xb7\xfc-\x81\x17\xb0\xf7\xb2v_<z\xd0\xff\x1c\xe1W\xd4\xd5\x12tC7-\xff\xd0\x07\xf4\n\x84\x99\x99\xab!\x07u\xa5\xa5\xc8\xc8\xdb\xd9\xc6\x8c\xdd\xad\xea\x06\x08\xd1\x99\\\xa1u-6]\x92\xff\x8f1`}:\x07\xe1u\x01v\x95\x86\xcf\xd7J\xec\x97\xf9\xfaA\x05\r\xff\x1a\x19\x9a\xe7\xff\xb4\xbe>(v\xd1W\xa3C\x99E\x89q.%\xd8\x89\xf4\xaa\xe3\xa9'\xd2\xab\x82\x0e\x1d\x14d\xe71dm\xb8\xfa*\xfb|~\x14Z\x13\xf3iam\xb7\xd6\xf8G\n\xbe\xa6\x86c_o\xb7\x840\x93\xef\xd9eCL\xdax>\x1fo\x0cc~\x9bYRN\xcb\xfe\xa8\x7f\xc7\xe3\x02\x9a\x9a\xa2\x96T;\x7f\x85\xf3\x11\xcf\x06I\xcd\x04M\x9e?\xd5\x0f\xf8\xfd\xa4\xc9\xb2>\x9a\x19\xe0\xdd}\xbc!\x82'\xddSdhuo\xfc!\x8d\xf94\xd5\x7f\xdbo\x1f\xa1&\xe7\x87L\xd0q\xaf\xf8\xec\x08>\xcdE\x8d\x10\xe5\xcfE\xaf\xf1\xf8e\x96\xd0\xdb\xd90\xad\xf2\x1a\xc2\x19i\xd1\xff\xf8\xfce\xae\xc2e\xb6\xad\x9a\x1d|v;coNG\xa0\xbd\xbc1\x87Td<$4\xe71\x7fo\xaf\xa1\xf1\xd8U\xf4\xda\xb4\xb63=[\xfc~\x06w-\x99\x87\xa6\x88\xf0om\xfc/\x94\x8es\xec\xb6L\x9bo\xf5\xb0?\xc2\x1a>\x894\xe4\x7f\xb7\xe3\xf1\xbfr\xc2=\x86t\x9b\xafm\xbc!\xaa\xf4sA\x7f\xf6\xf1\xfa\xef\xe4}?\xc7\xe1\x0fy\xc1\xb6\xf3\xef\xda\xf4\xf8C\x1b\xf6\xad\xe8\xca\xc5\x05\xb7^;-6\xfbj\xdfo\x8f\xc7\x9a\xed\xf7\xa0\xbf\x8f\xd0/\xef\xf2\x99\xc2\x18\x19\xf9m\x13\xec&_o\x8e\xc2U\x99\x9f\xae\xc2\xb7\xd0]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]\xab\xab\x8e\xff\xff\x97c\xdf\xe3\xbd\xff\xc6\xd2t\xea\x9e\xba\xeb\xae\xb8\xfc4\xcb\x7f\xf2\x1a\xd8\xe4\xeb\xae\xfa\xeb\xbe\xfb\xef\xbe\xfb\xe3\xff\xff\xf6D\xeb\xbe\xf8\xef\xff\xd7\xdf]\xf7\xdf|z\xff\xfb\xfb[[[\xef\xbe\xb8\xf5\xff\xeb\xf1\xcb\xff\xfe\xe4Y\x16?\xff\xffw\xc9\xdf\xff\xf8\xf8-\xc7|;L\x0c9\x01\x87,o\x8fw\n\xbc{\xadZj\xa1u\0 \xbfW\xc2\xff\xf9t\xb0\xc0D\x04xr>\x16\xf1\x1eN\xfb\xeb\xbe\xb9;\xeb\xbe\xbb\xef\xae\xfa\xef\xae\xfb\xef\xbe\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xe1\x0c\x02_\xd4S\xac6LL?\xaa\x8b\x87\x9e\xf8A\xc1?I\xc4~\x1a\xaa\x19\xafd\xd7\xd2\xf8\xf2O\xc78b\xb6E\x17(\xff\xfaz\xeb\xae\xba\xe1|4=\x19\xb9\xd6\\l\xe1B\xff[\x1f\xe3\x9c'\x17i \xdf\xa5<?\xc7\xe4\"=\x9e\xf8\xa48\xa8s\xbe\x85\xfe\x11\xdf\x9fF\xcc\xd7\x0f\xfc!\x83V\xc8\x86U\xc6\x9c\xc5k\xfe;\r\x0fyj\xc8\xd7K\xfc3\x89q\xb4\xd2\x9d\x12$\xbf\xea\x86\xc7\xf8\xf7\x0f\xb2\xc3FMc\xba75\xff\x85\xb0]zL\xaf\x8c\xd0l\xd0\x8b\xfdh\x7f\x85\xdc=\x96L\xc9Z\xc8\xfbEo\xfa\xfd\x0f\x0b\xbd\x19\xa2\xeb|Y2\xd9\x7f\xad\x0f\xb1\xe1g\x05\xd6H\xaa\xc9!\xf3/\xff\xaa\x1fc\xe3\xf0D\xfa~\x86\x8c\xaf\xdb\x9a\xff\xc28\xad\x93t\x92]\x7f\xc2\xf8{,\xcd\x12\xa2f\xca\xcb\xfdl\xbf\x1c\xe0\x89z\xad\x95\x87H\xdaXh\xbf\xc2\xd8.\xb9a\x9b\x8f\xfb\xbb'o\xfd}\x0f\x8e\xc1:\xda~\x9a\xa5V\xd5/\xf0\xberC\x17[\xeakF\x8c\xcf\xc6\x9d_\xeb\xe8|v\x1fI\x13t\xa8\xfd\xef\xe1l\x1dxX\x11\xe8\xb7i\r/\xf5c\xe8|-\x82u\xb4\xfd2\x9e3A\x9a\xff\xd7\xecx\xf7\x9fD1JGn\xad\xbb?\xf8_\x07[r\xd0\x88\xfd\xca\x89\x0e/\xf5c\xe8hxY\xc1\xd7\x95u4\r\nS\xfe\xaa\x87\xd8\xf0\xb3\x82\xeb$F\x82\xc5a\xd2\xff\xaf\xb1\xf1\xf8\"}?Hn\x86\xf6\x95/\xf0\xb6\x08\x96\xd3\xf4f\x0b:8T\x1f\xfe\xac\x7f\xc3\x18\xaavi6\xc9\xb6I\x7f\xad\x0f\xf1\xeerFd\x9d\xedv\x19(\xc1\x8f\xff\x0c\xe5\xbb*'\x88\xd0Z_\xf5\xfb\x1e\x16p5\xdf3#\xf7\xff\xea\xc7\xfc~\x08_I2i\x91.\xb5\xff\x1f\x83\xd6\x19\xe88\xae\xdc\xd7\xfe\x18\xc1\xdf\r\x05\xa4\xa3\xa6\xe8Q\x7f\xd6\xc7\xb1\xf1\xee\x1fe\x8a\x89\xf6\xcf\x04\xaf\xfc/\x80\x91\xaf\x9d\xb2\x9ek\r\xba_\xf5\xf6>\x16\xc1\xd7\x83\x97\x1b8P\x91\xb1\x7f\xea\xc7\xfc~H\x97\xa6\xf1\xdc>\x16\xf8\x7f\x85\xf9\xa2j\xd2\xe4\x8aS\xfe\xa8}\x8f\x85\xb0]zW\xed*_\xea\xc0\xfa\x03\xe1\x8cJD\xcc\x16tp\x91\"_\xb7\xd5\x8d\x81\xf4\x07\x860\x92\x9d\x04t\x124*,\xd9\xd4\x9d\xbd\xb6\xf1<O\xb8\x049\xf2L\xbb\x80A7\xe1&X]eS\xac\xfat\xa6\xf5\xd7\xfe\xac\t\x170e\x17\x0b\xa8\x14\xca\x85\xa9\"X?\xff\x17\xc5\xf627\x1b\x11\xd6\x1c\xf8]A0\xfb\x19\xd1\xb2\xe8\xca\x89\x8e/\xa7\x82\x10\xb3\r\x1fbZ\x93$\xa5\xd5hx\x93\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xb8\xfc\x04~\xe3jo\xfe0\xbd\xc7\xb8\t\x9b\xa7\xe7\xfeH'\xe9\xd8\xd3\xd7]u\xd7\x1d\x82F\xe7\x9b\xfem4\x1f\r\xccd!\x8d5\xff\xd3OL\xd1Z\xbe\xbb\xef\xbe\xba\xeb\xae\xbb\xef\xbe\xba\xeb\xbe\xba\xeb\xae\xba\xeb\xae\xba\xef\xae\xba\xef\xbe\xfa\xeb\xae\xbb\xedmmmo\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\x8f\xc0J\xf5N\xda\xcf&\xab\xb8\xdaG\xff\xe1\\\xbf\xecN\r\x93\xa3'\xfb\xe9\xe9\xeb\xae\xba\xeb\xc2\x8e\xf9\x7f\xc2X\xff\xbc\xd7\xf5\x19\x7f\xf0\x94\xac1\x9d\xa5\xe2\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]\xbd==u\xd7]u\xc7\x7f\xff\xea;\x04M\x9b%\xff\x97\xe45Hv\x02]\xa6\x06\xbeo\xf7\xa6\x7f\xda\x1d\x823:?\xfbwC<Ga\xa6[\xffdg\xe4yX\x1f\x86\x99o\xfd\xb7\xcd\x03\xc4v\x1ae\xbf\xffg\x1f\x86\x93\xcd\xff\xec>\x8c~\x1ae\xbf\xf6h\xf3EB\xd8i\x96\xff\xd4|\xcbl\x11/\xf41\xce\x1ae\xbf\xf1\x9b\x90{f\x80\xec4\xcb\x7f\xe7\x9by\x980\xc1\x1d\x86\x99o\xfc|\xcb\xc6\x8c\xacv\x02/\xd9\xb57\xfeT]R\x1d\x86\x99o\xff\xc7\x1f6;\r2\xdf\xfa|\x86\x94~\x1d\xcb\x7f\xe3\x0f\x98\xb9\x0e\x0e\xc3L\xb7\xff45\x8f\xff\xfb4[7\x1d\x86\x99o\xfc\xb5\xe8\x8a\x88v\x1ae\xbf\xf6Mu\x1f\x87r\xdf\xfb4\x1e\xe7\xe3\xf0\xd3-\xfe\xf7G\x8eRG\xe1\xdc\xb7\xffg\x91!x\xfc4\xcb\x7f\xe3\xf8\xa5\xb6\xa3\xb0D\xd9\xba\xdf\xfb\x0f\x91\xe3\xf8\x1d\x86\x99o\xfd\xf0]\xa5\x1f\x87r\xdf\xfb4^?\xff\xe5D\xfa\xb6;\r2\xdf\xfa\x8e\x9b\xb6$q\xd8\x08\xbf`o[\x7f\xe5D\xcbj;\x01#vmM\xff\xd7a\xc7`!\xf7\xbf?\xf4e\x87\x8e\xc0K\xbb\x03z\xdb\xff\xa0\xb9LGa\xa6[\xff\x99\xfa\xc7\xff\xfd%\xea;\r2\xdf\xf8\xc3\xe7\xe48?\r2\xdf\xfb4\xbaC\xb2\xe7\xff\x9bf|v\x1ae\xbf\xf6}\xd4v\x1ae\xbf\xfa[\"\x19\x1d\x97?\xf5Ak\x1f\x94\x97\xfeCG\x9eC1\xd9s\xff\xf7\x8e\xc3L\xb7\xfe~\xfb&\xc7a\xa6[\xffD\x85\xb4\xa3\xb0\xd3-\xff\x8f\x99z!\xa3!\xd8+r\xdf\xfbX<\x1e\xbf\x14\x87`!\xfd\xbf\xe6\xff\xda3\x1c\x90\x1f\x86\xf2\xdf\xe8\xae`\xb3\xc6\x8c\xacv\x1ae\xbf\xf1\xfc>\x1a\xb6?\xff\xe4\xe6\xaeH\x9a\xa3\xff\xfex\x9fsp\xfb\x80[\x04M\xdao\xff,2=\xd7\xfa\x18\xe7\r2\xdf\xf9Q>\xad\x8e\xc1[\x96\xffZ\xb3\xd1\x15\x10\xec4\xcb\x7f\xe6\x8by \xa3\xb0\x11=`h?\xf1\xf3.\xe8n;\x01#\xd6\x07\xff\xb2\xff\x90\xd4f\xe7\x95\x10\xec\x04\x8f[\xf3\xff\x9a\x19\xe3\x1f\x87r\xdf\xfd\x9f\x8f\xc3H7_\xfb\x0f\xa3f;\r2\xdf\xf9j\xcb7Q\xf8w-\xff\x8f\x996\x1a!\x9b\x81l4\xcb\x7f\xf0m\xe6\x81\xe6\xbf\xd8\xc78i\x96\xff\xdb3\x1c\xcf\x1d\x84~\xa6\xff\xc8\x91\xfaC\xb0\xd3-\xff\x9a)d\xe3\x0f\x91\xd8i\x96\xff\xfe\x8d\x98\xff\xff\xa0\x8d\xf6\xcd\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]u\xd7]q\xd4\x1d\x9f\x1fnW\xff\xc2\x18\xe7\x9b\xed\xb6w\xff)\xac \xe1>7[Wm\xb3\xce\x8e_\xd9c\x89\x0f\x1aSy\xa1\xe9\xd2\xfd=u\xd7]u\xc2\x1f\xff\xfa\x8f\xc1/\xdf\x89o\xcck\xcb\xf2\x1a\xa4\x10\xc5\x14&\x8d\xf6\xd2\xdf?\xed\x040\x9b-.\xffn\xe8l\x82\x18;S\xffd\xc7\x91\xe5`~\x19dI\xdb\xec\xbd\xb7\xd5!\xf8\xc3V_\xf6\xb9\xb4\xf8\x10\xcdJ_\xfeCJ?\x0e\xe0*[\xe3>C>C\x81\x0c\x1dT\xfa/\xd7m\x8c~\xa5\x97\xd2\xa5\xe8\xb9\x128C4\x18\x97t\xbf\xde\xcb4\x14!\x8e\x95?\xfd\x12=\xb7\x08`\xc6j\x97U\xf6M\xech\x87\xe0\x9b@[o\xffG\xda\x1f\x84o=\x1ec_\x9aD\xcd!\x8c\x87\xed#B#\xff\xe4\xcf\xd1\xc7\xe3\x0c\xab\xfe\xdb-\xa5\x08bt\xa2\xef\xf5\xdbF\x10\xcbN.\xf1{\x9f\xf6C\xf0\xc4E=\xa3g\xb6\xc7\x91\xed\x041\xd5O\xdf\xd9ul1\x8e\xd4|R\xff\xab<\xb0#\xd7\xfa\x18\xf7\x19e\xff\x9f\xf6Q\xffg\x8f\x17\xcf\xc8\x93w\x1f\x86\x99d\xbe\xfd\x93{\x1a \x86b0\x9a/\xa5\xf4\x1b\xf6C\xf0\ry\xa6\x13Qh\x91z\xf5a\x8f\xee/K\xc6o5\xbbEh\xfcy\x97\xe7\xcfv\xf6K\xf5\xff\xf7\x87\xd1\xfd?)\x88\xfc\x8cz_.\r\xae\xe9$?\x04o\x90\xd2\xc1\xbf\xf6\xba(\xfcd\x1fl/\xd6\xcb\xab\x0c!\x81V\x9d7\xfe\x89\x074\x1eB\xf8\xaaJm6\xe6\xd3oI\x9f\x88\t\x10\x80\x91\x17K\xa9\xc6].\xa7\x18]z\x17\xfe\x9b\x0fUo(\x97(\x90]Bf\xa7R\xff\x96\x1d\x1c\x7f0\x81\xd3\x1c\x1a<a\x1e?\x84:\xe3TZ.7\x11\x80\x88\xb1\x97q\xcb\xb8\xe3\xdc\t\xfb\x80\xfa\x85\xff\xedj\xa3\xf0\x14S@[o\x98\xd7\xb0\xfa\r\xc2\x18\xc6\xc0\x03}~~\xcbiG\xe10\xa0\xd3\x18\xd7\x98\xd2\xfb2?i\x90\xec\x10\xbcL\xbfZ\xcd\xebU\x08b\xa6\xef\xb6\x97\xb0\xfa4C\xf2\x116?\x7f\xffl~\xfamm~h\xf2x_J\xfb\xf1~\x7f\xa2\xb2L\xd1^\xcb\xf6\xe9\xff\xb1vS\xd7\x1b\x0b+\x11\xf8\x89\x1f\xfd\x12>\xdb!\xf9\x07\xa0-\xb5\xdfK\xda\\|\xcb\x1f\x87\xdb*\xaa\xdb*\xbc\x8f}\xb6C\xf0G\x9a\xb1\xa9E\xffY\xa1\xd4~1\xea/\xf8\xe9\xbb\xec0\x86\x1f\x84\xa1/K\xe5\x86\x8d\xc7\xe0\x15\xea\xc6\xe0\xd9\xe5\x97\xf6\xf6M\x0f\xccAk\xfe9S%\xa0\xcb\x81\x8c\x865m\xbf\x7fv\xb6G\x9a\xffc\x088\x08{\xa0.\x13~\x97\xb5\xd5\x86\x10\xc0\xed{\xd92\xf6}\xdc!\x83\xb5?\xf6\x9fV\xc7\xe4\xb4\xbf\xe4\xe6\xad\x11*\xa7\x01\x0c\rn\x99#\xc7\x9f\xd4\xebX\xfd\xf7\xa2\xff\xb3E\xd0c\xfd.\x97\xe9\x179\xa4?\x01\x7f\xd6\x12\xff\xdb^\x98C\x063T\x9f\xfc\x8fC\xcf\xd9\x0f\xc0vt\xb1\xe3\x17\xd0\xbdQl\x94!\x81\xda\xf7\xb3\xff\xa1\x9f\x8f\xc2\x17\x9e\x93\x1as\x1e\xbeh\xf4\xd3\x0ba-\x92o\xfc\xcf,;%\xd8\xfe;\r2\xdf\xfdtf`\x7f\xff\xd1#\xd8\xa3\xf0\xee[\xff\xa0\xf7\x85\xf2\xe7\xfd\xdc\xffd\xd2\xe8\x7f\x1d\x86\x99o\xfd\x17TAl\x01\x97z\x9c\xbe\xfem\xd1\xb9\xa1\xca@\x1c\x03\xf0\xb3\xdc,\xf0]JK\xff=\xb5\xb4m\xb4\xba]\xad\xe6K\xa5\xda\xded.\xa1\xdc\xb7\xfet\xa6\xfa\xb7\x17Ar\x1c\x85\xd4w\xdf\xf9a\xd1\xd7\xf48Y\xc0$\xf5\xb0\xe1\x1bO\xe5\x85\x8c\xa8\xba\x80\xd0\x1b\x89\xb1\xc5\xe3\xb0\xd3-\xff\xb6\xb8\xe9\xb9\x8f\x1f\x9a?\xfb\xde~\xc8-\x82&\xc0\xd2\xdf\xfb\\\x90U\xec~9\xc3L\xb7\xfe\x89\x16\x8d\x88v\x1ae\xbf\xffD\xe3\xb0D\xdd\xa6\xff\xed\xbd\x91\xa0;\x04\x8d\xaa\xdb\xffV\x1f,\x07a\xa6[\xffF\xfd\xa1\xd8i\x96\xff\xddt\xa3\xff\xffOx\xff\xff\xc8kR\x19\x1d\x86\x99o\xff\xc8r?\xff\xf6\xb5f?\xff\xe5J\x7f\x8a\xb1\xec\x0e\xc1\"\x9c\xf3\x7f\xae\x12\x1e\xd3%\xd7]u\xd7]u\xd7]u\xc7`$\x7f@.o\x97X\xe1_H\x88\xb1\xd8\n>\xae5\xe4\x83q\xa3\xe1%\x84\x1c\x14x\xee\xd9\xbd\xbd\x95,\x9a\xc3\xc78{J\xd9 \xf9\xfdt\xffO]u\xd7]rq\xfd\xbf1\xaf\xfc~\x1fe\x8af\xf1\xb9\x7f\xff\x1f\x862\xc53\xed\x8d\xc9\xff\xde\x9d\x96\x1f\xee\xddW\xff\x1f\x862\xdfa\x7f\xe3\xfa\x0b\xa4\x82\xff\xc7\xfd\x08r\x1f\xff\xfc~\xbe\xc2\xff\xe3\xff\xb0\xbf\xf8\xfd\xec\xb7\x1a\xff\xf1\xff\xef\xff\x8f\xc3\xec\xb3&\x17\xff\xe3\xff\xd8_\xf8\xff\xa5:\n\x7f\xf0\x8e0\xbfE\xff\x8f\xc1\xae\xd5#\xc0\xa6x\xbf\xf8\xfd/K\xff\x8f\xda\xbe\xec\xbf\xf1\xf8c,\x93\x1f\xa5\xff\x8f\xd2d\xd6\xd7\xff\x1f\xb4l\xf4U\x7f\xe3\xfe\xdfdL\xff\xc2<N5\xf7\xff\xc2\x18\x7f,x\xc5\xff\xf8\xfe\x93\xf6_\xf8GI}/\xfc\x7fuU\xb5W\xfe?\xbaY\xe3?\xfb\xc3\x06X\x7f\xdfI/\xfc\x7f\xb5\x9b?\xf8\xfey\x1b:\xbf\xf8\xfe\xd7\x8fe\xff\xc3;Hv\x9bm;m\xff\x89LJcR\xca4\xbf\x1a\x96Q\xa5\xf8]Y\xb5\xeb\xff\xb73|\xcd\xc2\xea\x06jY?\xff\xfc\xf6\xaa\xeah`\xe1\x9c\x7f\x166\xdb\x8b\xff\xb25/\xea\xa5\xfc{\xd5/\xff\xc7\xe9%\xff\xfc~\xd3\xb2\xd2\xff\xe3\xff\xa5\xff\xc7\xf4\xbf\xff\x8f\xc9\x14\xbc\xb0\xff\xc2\x1f\xe9\x7f\xef^\xd4\x7f\xa2\xec\xbf\xff\xb7\xff\x84\xaa\x8f\x9e?\x0f\xb2\xde\x91\xe3\xff\x8f\xd0\x19fl|i\xff\xe3\xfb\xfaG\x8f\xfe?\x0c\x19d\xd9\xf2x\xff\xf1\xfd\xc5\xe9\x7f\xe3\xf5j\x17k\xff\x1f\x8c\x9c)[<\"\xff\xe3\xfa\xaa\xab\xff\xf1\xfb\x9f<\xf1\xab\xff\x1f\x93\x12\xf4\xbf\xf1\xfbMw>\x7f\xe1\r{X\x9f\xa5\xff\x8f\xfa\xbfW\xfe?T\xba\xff\xf1\xff\xe9\x7f\xe3\xf7j\xf8\xfe\x7f\xfc~\x80\xcb3c\xd3O\xff\x1f\xdf\xdd\x97\xfe?\x0ce\xaf\xb2_\xfc~\x182\xd4\xbb\xff\xe1\r?\x9f\x12e\xbf\xff\x8f\xc3\xec\xb7\xd9\x7f\xef\x0ce\x9f\x1f\xe9o\xff\xc7\xf7\xbd\x92_\xf8\xffki\xaf\xfc/\x84\xdf\xd3\xcd\x0e\xdf\xf9\x89\x8d\xf9\xd5\xca\xe1u\xb4\x9fk\xff\xb5T\xb6\x19\xee\xd8\xf0\xba\xcc^\xa4\xdf\xfdr\xa4\xf2\xa4\xc2k\xd6\xde\xdb\x7f\xf9\xd1\xd6\"\x08\x81\xff\x82\xbb\x14<\xe5\x1e2\xf8{\x87\xc7\xb8\xc3Ro\xc5\xff\xe3\xff\xa5\xff\xc7\xf2o_\xfe\xfb\xe3\xfd-\x94_\xf8\xff\xedB\xff\xc7\xe3\xed~\xc2\xff\xc7\xf2\x98\xb0\xc7a\x8a\x0b\xff{\x8f\xf6\x17a\x7f\xe3\xf9\x1e\x82\xff\xfe?\xa0\xb9\x0c\x7f\xfc\x7f\xa0\xbbN\x7f\xe3\xf4\x19o\xb0\x99\x7f\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xe1l\xa4\x1f\xfd$\xb4\x92\xa3\xed4\xdbm4\xdbd\xba\xe4x\xe7\x7f\xff\xe6\xaf\xff\x1f\xb0A\xcaJ\xfb\xef\xbe\xf8_\x0e\x08Is\x19\xcb\xeb\xa9rK1\xa6\xe2\xe8}\x8e\x17\xc0\x7fr\xdf\xe5\xe3=v?\xe9\xd9\xcc\xaf\xe8\x7f\xfe\xa3\xf0AGu\xdf}\xf7\xdf}\xf7\xdf}\xf7\xdf}\xf7\xdf}\xf7\xdf}\xf7\xdf}\xf7\xdf}\xf7\xdfkkkk}\xf7\xdf}\xf7\xdf}\xf7\xdf}\xf7\xdf}\xf7\xdf}\xf7\xdf}\xf7\xdf}\xf7\xdf}\xf7\xdf}\xad\xad\xad\xad\xad\xf7\xdf}\xf7\xdf}\xf7\xdf}\xf7\xdf}\xf7\xdf}\xf7\xdf}\xf7\xdf\x1e\xa1\"\xdan\x9e\x8fo\xf5\xff\x1e\x1f\x08\xaf\x1a\xa0\xd7\xbc8\xcbT\xb5j\x9f\x88p\x01\xfc=\xf32N\xdc\xd8\xfb\xef\xbe\xfb\xef\xbe\xfb\xef\xbe\xf9;\xef\xbe\xf8_\x01\xd4\xd4\xb7\xfe\xff2\x10\x9a\xdbo\tLly2\x18\x7f\xfe\xbf\xaf\xe1\x176\xd96\xb6\xb6\xb6\xb6\xb6\xb6\xb6\xb6\xb6\xb6\xb6\xb6\xb6\xb6\xb6\xb6\xb6\xb6\xb6\xb6\xb6\xb6\xb6\xb6\xb6\xb6\xb6\xb6\xb6\xb6\xb6\xb6\xb6\xb6\xb6\xb6\xb6\xb6\xb6\xb6\xb6\xb6\xb6\xb6\xb6\xb6\xb6\xb6\xb6\xb6\xb6\xb6\xb6\xb6\xb6\xb6\xb6\xb6\xb6\xb6\xb6\xb6\xb6\xb6\xb6\xb6\xb6\xb6\xb6\xb6\xb6\xb6\xb6\xb6\xb6\xb6\xb6\xb6\xb6\xb6\xb6\xb6\xb6\xb6\xb6\xb6\xb6\xb6\xb6\xb6\xb6\xb6\xb6\xb5\xc7\xff\x97\xff\xf7\x7f\xff\xd9\x173\xb1Ty!\xec\xb1vc\x1d\xb5Ro\xa7\x8fP&m\x17\t\xdd4\x9dQ7\xd5\xbc0\xa3\xbeJX!\xb6\xdb\xb2\x8f\xfa\xb1\xf4>9We\xff\xf4\xb4\xb4\xb4\xb4\xb4\xb4\xb4\xb4\xb4\xaa\x10P\xf4\x18\x08\xfc\xe9I\xff\xff\"\xc2\n\x18\xf4\xfc\x89Y\xff\xfd\xaf\x87-B<\x81\xaby\xe1z\xc47\xfai\x94\xd7\x1fC\x0b\xd5^\x13!g\x02\x16\xd0>w\x96\x0c\x94\xae\xff\xad\x17\xb3\xd9\x1a\xb1\xb6\x18p\xcd\xc5\xb7\x06\xcanhLt\xcb\xcf_E\xc3\x18h\xfcXa!\xb7dh'\xc7L\xa7\xab\x1fC\xe1\x1c\x10\x99\x08M\xcf\xe6\x17\x7f\xa0\xb0\xc6\x08t\x90\xa5`nSX;\xef}\xa6\xbf\xd6G\xfe\x9e\xb8\xec\x10(\x80\xdc3\xca\xc26M\xa1\xfe\x9e\x17\xc0\x93[\xe9\x9e\x88\xb0Hz\xefK\xd2oV2\xbfCE\x84\x1c\x8c\xd1\x9d\xb7;\xec\xc9Q\xed\xfd\x04\x82\xc2\x18\xe7\x9b.\xa1\xc3\xb6V#&\xb3}=u\xa8\xec\t\xd5\xa0*W\x95\x8b$h\x7f\xe3\xf0\xeb\x9d\xb3\xfa)t\xb0\xd3\xf2n\x18\xc6\x02\x02;\xec\x8e\xf2\xc16\xc3\xfc\x9b\xaa\x1b\x1e\xc6\x87\x86\x1cs\xc6CE\x97M\ti\x8f\x93uc\xfe\x18\xc1\xb5\xe6\xd2+\ra\xbb\xdew\xfd?Z\x1fc\xc2\x0e9\xf2\xebs\xf2j\x7f\xae\xb8[\tI\x15\xb2\xb2tL\x8d\xd6PE5\xc0\xba\x94O\xb0>\x18\xc2r\x86\x8d.\xa2l\n\xc3pl\xa4\xdfOV?E\x84\x1c\r\xf7Y]\xde\xbf\xe1\x0cs\xcd\xce\xf6M\xb6\xa4\x82~M\xc7a\x8f\x12\r\xb2\x1f\xc6\x9f\xe3\xb0\xed3\xe5\xff\xc9\xb8G\r\xad\xcd\xb9\xde\xda\xd2_\xf0\x86\x0b\xd0B\x9d'vj\x9a\xd3\xc9\xbe;\x0b}.\x95\x86\xb0\xdbj\xee\x7f\xa7\x85\xf0\xe4\xec\xbd\x11`\x90\xf5\xde\x97\xa4\xde\xace~\x86\x8b\x08:j\xb6];\xdcc\xa7\xc9\xbb7\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xba\xeb\xae\xb8\xec:{\xd1\xb3f\x8f\xfdu\x83\xfc}\xf3\xad\xadZ}\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xad\xae";
    let mut receiver = singleton
        .get_event_receiver()
        .ok_or(DecoderError::FailedToGetReceiver)?;
    let decoder_name = "OMX.Exynos.avc.dec";
    let mime_type = "video/H264";
    let width = 1920;
    let height = 1080;

    let native_window = loop {
        match receiver.try_recv() {
            Ok(msg) => match msg {
                MediaPlayerEvent::MainActivityDestroyed => {
                    return Err(DecoderError::ApplicationClosed);
                }
                MediaPlayerEvent::SurfaceCreated(surface) => {
                    let env = singleton.vm.attach_current_thread()?;
                    let native_window = NativeWindow::new(&env, &surface.as_obj())
                        .ok_or(DecoderError::NativeWindowCreate)?;

                    break native_window;
                }
                MediaPlayerEvent::SurfaceDestroyed => {
                    return Err(DecoderError::ApplicationClosed);
                }
            },
            Err(TryRecvError::Disconnected) => {
                return Err(DecoderError::ApplicationClosed);
            }
            Err(TryRecvError::Empty) => {}
        }
    };

    let mut decoder = MediaEngine::create_by_name(decoder_name)?;
    let mut format = MediaFormat::new()?;
    {
        let env = singleton.vm.attach_current_thread()?;
        format.set_mime_type(mime_type);
        format.set_realtime_priority(true);
        format.set_resolution(width, height);
        format.set_max_resolution(width, height);
        if singleton.get_api_level(&env)? >= 30 {
            format.set_low_latency(true);
        }
    }

    let sps_pps = crate::debug::CSD;
    let idr = crate::debug::NAL_0;

    decoder.initialize(&format, Some(native_window), false)?;
    decoder.submit_codec_config(sps_pps)?;

    let mut input_buffer = decoder.dequeue_input_buffer(MediaTimeout::INFINITE)?;
    let min_len = usize::min(input_buffer.len(), idr.len());
    input_buffer[..min_len].copy_from_slice(&idr[..min_len]);

    decoder.queue_input_buffer(input_buffer, min_len as _, 0, 0)?;
    decoder.release_output_buffer(MediaTimeout::INFINITE, true)?;

    Ok(())
}

#[derive(Debug)]
enum DecoderError {
    MediaEngine(MediaStatus),
    RtcpSend(webrtc::Error),
    AttachThread(jni::errors::Error),
    SetAspectRatio(jni::errors::Error),
    FailedToGetReceiver,
    HeaderParsing,
    NativeWindowCreate,
    NoDecoderFound,
    WebRtcDisconnected,
    ApplicationClosed,
}

macro_rules! impl_from {
    ($t:ty, $e:tt) => {
        impl From<$t> for DecoderError {
            #[inline]
            fn from(e: $t) -> Self {
                DecoderError::$e(e)
            }
        }
    };
}

impl_from!(MediaStatus, MediaEngine);
impl_from!(webrtc::Error, RtcpSend);
impl_from!(jni::errors::Error, AttachThread);

async fn start_decoder(
    track: Arc<TrackRemote>,
    _rtp_receiver: Arc<RTCRtpReceiver>,
    peer: Arc<WebRtcPeer>,
    singleton: Arc<NativeLibSingleton>,
    codec_map: HashMap<String, String>,
) -> Result<(), DecoderError> {
    while peer.connection_state() != RTCPeerConnectionState::Connected {
        tokio::time::sleep(Duration::from_millis(100)).await;
    }

    // TODO: Check sdp_fmtp_line for SPS/PPS
    let codec_params = track.codec().await;
    let mime_type = &codec_params.capability.mime_type;

    let decoder_name = codec_map
        .get(mime_type)
        .ok_or(DecoderError::NoDecoderFound)?;
    log::info!("decoder_name: {decoder_name}");

    let mut buf = vec![0u8; RTP_PACKET_MAX_SIZE];
    let mut receiver = singleton
        .get_event_receiver()
        .ok_or(DecoderError::FailedToGetReceiver)?;

    let decoder = create_decoder(
        &singleton,
        &track,
        &peer,
        mime_type,
        decoder_name,
        &mut receiver,
        &mut buf,
    )
    .await?;

    let pli = PictureLossIndication {
        sender_ssrc: 0,
        media_ssrc: track.ssrc(),
    };
    let pli = [Box::new(pli) as Box<(dyn rtcp::packet::Packet + Send + Sync + 'static)>];
    let mut last_pli_time = SystemTime::UNIX_EPOCH;

    async fn send_pli(
        peer: &Arc<WebRtcPeer>,
        last_pli_time: &mut SystemTime,
        pli: &[Box<dyn rtcp::packet::Packet + Send + Sync>],
    ) -> Result<(), DecoderError> {
        const PLI_INTERVAL: Duration = Duration::from_millis(RTCP_PLI_INTERVAL_MILLIS);
        let now = SystemTime::now();
        if let Ok(duration) = now.duration_since(*last_pli_time) {
            if duration > PLI_INTERVAL {
                peer.write_rtcp(&pli).await?;
                *last_pli_time = now;
            }
        }
        Ok(())
    }

    let mut input_buffer = decoder.dequeue_input_buffer(MediaTimeout::INFINITE)?;
    let mut has_idr = false;
    let mut render = true;
    let mut reader = H264PayloadReader::new(&mut input_buffer);
    let mut last_sequence_number = None;

    log::info!("starting loop");
    loop {
        if peer.connection_state() != RTCPeerConnectionState::Connected {
            return Err(DecoderError::WebRtcDisconnected);
        }

        match receiver.try_recv() {
            Ok(msg) => match msg {
                MediaPlayerEvent::MainActivityDestroyed => {
                    return Err(DecoderError::ApplicationClosed);
                }
                MediaPlayerEvent::SurfaceCreated(surface) => {
                    let env = singleton.vm.attach_current_thread()?;
                    let native_window = NativeWindow::new(&env, &surface.as_obj())
                        .ok_or(DecoderError::NativeWindowCreate)?;

                    // Rendering is possible again
                    render = true;
                    decoder.set_output_surface(&native_window)?;
                }
                MediaPlayerEvent::SurfaceDestroyed => {
                    // Stop rendering when there is no surface to render to
                    render = false;
                }
            },
            Err(TryRecvError::Disconnected) => {
                return Err(DecoderError::ApplicationClosed);
            }
            Err(TryRecvError::Empty) => {
                match tokio::time::timeout(
                    Duration::from_millis(READ_TIMEOUT_MILLIS),
                    track.read(&mut buf),
                )
                .await
                {
                    Err(_) => {
                        log::error!("Timed-out while reading from `TrackRemote`");
                        continue;
                    }
                    Ok(read_result) => match read_result {
                        Err(_) => {
                            send_pli(&peer, &mut last_pli_time, &pli).await?;
                            reader = H264PayloadReader::new(&mut input_buffer);
                        }
                        Ok((n, _)) => {
                            let mut b = &buf[..n];

                            // Unmarshaling the header would move `b` to point to the payload
                            let Some(header) = unmarshal_header(&mut b) else {
                                return Err(DecoderError::HeaderParsing);
                            };

                            // Check sequence number for skipped values
                            if let Some(last_sequence_number) = &mut last_sequence_number {
                                if header.sequence_number.wrapping_sub(*last_sequence_number) != 1 {
                                    send_pli(&peer, &mut last_pli_time, &pli).await?;
                                }
                                *last_sequence_number = header.sequence_number;
                            } else {
                                last_sequence_number = Some(header.sequence_number);
                            }

                            match reader.read_payload(b) {
                                Ok(num_bytes) => {
                                    log::info!("Received NAL of size {num_bytes}");
                                    log::info!("Buf size {}", input_buffer.len());

                                    if !has_idr {
                                        let nalu_type = input_buffer[4] & NALU_TYPE_BITMASK;
                                        log::info!("nalu_type: {nalu_type}");
                                        if nalu_type != 5 {
                                            send_pli(&peer, &mut last_pli_time, &pli).await?;
                                            reader = H264PayloadReader::new(&mut input_buffer);
                                            continue;
                                        } else {
                                            has_idr = true;
                                        }
                                    }

                                    log::info!(
                                        "NAL: {:?}",
                                        Bytes::copy_from_slice(&input_buffer[..num_bytes])
                                    );

                                    match decoder.queue_input_buffer(
                                        input_buffer,
                                        num_bytes as _,
                                        0,
                                        0,
                                    ) {
                                        Ok(_) => {
                                            log::info!("queue_input_buffer success");
                                            match decoder.release_output_buffer(
                                                MediaTimeout::INFINITE,
                                                render,
                                            ) {
                                                Ok(_) => {
                                                    log::info!("release_output_buffer success");
                                                    input_buffer = decoder.dequeue_input_buffer(
                                                        MediaTimeout::INFINITE,
                                                    )?;
                                                    reader =
                                                        H264PayloadReader::new(&mut input_buffer);
                                                    continue;
                                                }
                                                Err(e) => {
                                                    log::error!("release_output_buffer error: {e}")
                                                }
                                            }
                                        }
                                        Err(e) => log::error!("queue_input_buffer error: {e}"),
                                    }

                                    has_idr = false;
                                    send_pli(&peer, &mut last_pli_time, &pli).await?;
                                    input_buffer =
                                        decoder.dequeue_input_buffer(MediaTimeout::INFINITE)?;
                                    reader = H264PayloadReader::new(&mut input_buffer);
                                }
                                Err(H264PayloadReaderError::NeedMoreInput(r)) => reader = r,
                                Err(_) => {
                                    has_idr = false;
                                    send_pli(&peer, &mut last_pli_time, &pli).await?;
                                    reader = H264PayloadReader::new(&mut input_buffer);
                                }
                            }
                        }
                    },
                }
            }
        }
    }
}

async fn create_decoder(
    singleton: &Arc<NativeLibSingleton>,
    track: &Arc<TrackRemote>,
    peer: &Arc<WebRtcPeer>,
    mime_type: &str,
    decoder_name: &str,
    receiver: &mut UnboundedReceiver<MediaPlayerEvent>,
    buf: &mut [u8],
) -> Result<MediaEngine, DecoderError> {
    let mut native_window = None;
    let mut format = None;
    let mut parameter_sets = None;

    let mut payload_buf = vec![0u8; RTP_PACKET_MAX_SIZE];
    let mut reader = H264PayloadReader::new(&mut payload_buf);

    let pli = PictureLossIndication {
        sender_ssrc: 0,
        media_ssrc: track.ssrc(),
    };
    let pli = [Box::new(pli) as Box<(dyn rtcp::packet::Packet + Send + Sync + 'static)>];
    let mut last_pli_time = SystemTime::UNIX_EPOCH;

    async fn send_pli(
        peer: &Arc<WebRtcPeer>,
        last_pli_time: &mut SystemTime,
        pli: &[Box<dyn rtcp::packet::Packet + Send + Sync>],
    ) -> Result<(), DecoderError> {
        const PLI_INTERVAL: Duration = Duration::from_millis(RTCP_PLI_INTERVAL_MILLIS);
        let now = SystemTime::now();
        if let Ok(duration) = now.duration_since(*last_pli_time) {
            if duration > PLI_INTERVAL {
                peer.write_rtcp(&pli).await?;
                *last_pli_time = now;
            }
        }
        Ok(())
    }

    loop {
        if peer.connection_state() != RTCPeerConnectionState::Connected {
            return Err(DecoderError::WebRtcDisconnected);
        }

        // If everything has been gathered, build the decoder
        if native_window.is_some() && format.is_some() && parameter_sets.is_some() {
            let mut decoder = MediaEngine::create_by_name(decoder_name)?;
            decoder.initialize(&format.unwrap(), native_window, false)?;

            let data: Bytes = parameter_sets.unwrap();
            log::info!("SPS/PPS: {:?}", data);
            decoder.submit_codec_config(&data)?;
            return Ok(decoder);
        }

        match receiver.try_recv() {
            Ok(msg) => match msg {
                MediaPlayerEvent::MainActivityDestroyed => {
                    return Err(DecoderError::ApplicationClosed)
                }
                MediaPlayerEvent::SurfaceCreated(surface) => {
                    let env = singleton.vm.attach_current_thread()?;
                    native_window = Some(
                        NativeWindow::new(&env, &surface.as_obj())
                            .ok_or(DecoderError::NativeWindowCreate)?,
                    );
                }
                MediaPlayerEvent::SurfaceDestroyed => {
                    native_window = None;
                }
            },
            Err(TryRecvError::Disconnected) => return Err(DecoderError::ApplicationClosed),
            Err(TryRecvError::Empty) => {
                match tokio::time::timeout(
                    Duration::from_millis(READ_TIMEOUT_MILLIS),
                    track.read(buf),
                )
                .await
                {
                    Err(_) => {
                        crate::info!("Timed-out while reading from `TrackRemote`");
                        continue;
                    }
                    Ok(read_result) => match read_result {
                        Err(_) => {
                            send_pli(peer, &mut last_pli_time, &pli).await?;
                            continue;
                        }
                        Ok((n, _)) => {
                            let mut b = &buf[..n];

                            // Unmarshaling the header would move `b` to point to the payload
                            let Some(_header) = unmarshal_header(&mut b) else {
                                return Err(DecoderError::HeaderParsing);
                            };

                            match reader.read_payload(b) {
                                Ok(num_bytes) => {
                                    if let Some((width, height)) =
                                        H264Codec::get_resolution(&payload_buf[..num_bytes])
                                    {
                                        let width = width as i32;
                                        let height = height as i32;
                                        let env = singleton.vm.attach_current_thread()?;
                                        singleton
                                            .set_media_player_aspect_ratio(&env, width, height)
                                            .map_err(|e| DecoderError::SetAspectRatio(e))?;
                                        format = Some(MediaFormat::new()?);
                                        if let Some(format) = &mut format {
                                            format.set_mime_type(mime_type);
                                            format.set_realtime_priority(true);
                                            format.set_resolution(width, height);
                                            format.set_max_resolution(width, height);
                                            if singleton.get_api_level(&env)? >= 30 {
                                                format.set_low_latency(true);
                                            }
                                        }
                                        parameter_sets = Some(Bytes::copy_from_slice(&payload_buf[..num_bytes]));
                                    } else {
                                        send_pli(peer, &mut last_pli_time, &pli).await?;
                                    }
                                    reader = H264PayloadReader::new(&mut payload_buf);
                                }
                                Err(H264PayloadReaderError::NeedMoreInput(_)) => {
                                    send_pli(peer, &mut last_pli_time, &pli).await?;
                                    reader = H264PayloadReader::new(&mut payload_buf);
                                }
                                Err(_) => {
                                    send_pli(peer, &mut last_pli_time, &pli).await?;
                                    reader = H264PayloadReader::new(&mut payload_buf);
                                }
                            }
                        }
                    },
                }
            }
        }
    }
}

fn unmarshal_header(buffer: &mut &[u8]) -> Option<rtp::header::Header> {
    let header = rtp::header::Header::unmarshal(buffer).ok()?;
    if header.padding {
        let payload_len = buffer.remaining();
        if payload_len > 0 {
            let padding_len = buffer[payload_len - 1] as usize;
            if padding_len <= payload_len {
                *buffer = &buffer[..payload_len - padding_len];
                Some(header)
            } else {
                None
            }
        } else {
            None
        }
    } else {
        Some(header)
    }
}

impl AndroidDecoderBuilder {
    pub fn new(
        singleton: Arc<NativeLibSingleton>,
    ) -> Result<AndroidDecoderBuilder, jni::errors::Error> {
        let mut codecs = Vec::new();
        let mut codec_map = HashMap::new();
        {
            // Array of (mime type str, Android profile id -> Codec)
            let mime_types: [(&str, &str, fn(i32) -> Option<Codec>); 3] = [
                ("video/av01", "video/AV1", |_| None),
                ("video/hevc", "video/H265", |_| None),
                ("video/avc", "video/H264", |id| {
                    h264_profile_from_android_id(id).map(|profile| H264Codec::new(profile).into())
                }),
            ];

            let env = singleton.global_vm().attach_current_thread()?;

            for (mime_type, sdp_mime_type, converter) in mime_types {
                let decoder_name = match singleton.choose_decoder_for_type(&env, mime_type) {
                    Ok(Some(decoder_name)) => decoder_name,
                    Ok(None) => {
                        crate::info!("No decoder for {mime_type}");
                        continue;
                    }
                    Err(e) => {
                        crate::error!("Error while finding decoder: {e}");
                        continue;
                    }
                };
                let profiles =
                    match singleton.list_profiles_for_decoder(&env, &decoder_name, mime_type) {
                        Ok(Some(profiles)) => profiles,
                        Ok(None) => {
                            crate::info!("Possibly invalid decoder name: {decoder_name}");
                            continue;
                        }
                        Err(e) => {
                            crate::error!("Error while listing profiles: {e}");
                            continue;
                        }
                    };
                for id in profiles {
                    if let Some(codec) = converter(id) {
                        codecs.push(codec);
                    }
                }
                codec_map.insert(sdp_mime_type.to_owned(), decoder_name);
            }
        }
        Ok(AndroidDecoderBuilder {
            singleton,
            codecs,
            codec_map,
        })
    }
}

// https://developer.android.com/reference/android/media/MediaCodecInfo.CodecProfileLevel
fn h264_profile_from_android_id(id: i32) -> Option<H264Profile> {
    match id {
        1 => Some(H264Profile::Baseline),
        2 => Some(H264Profile::Main),
        4 => Some(H264Profile::Extended),
        8 => Some(H264Profile::High),
        16 => Some(H264Profile::High10),
        32 => Some(H264Profile::High422),
        64 => Some(H264Profile::High444),
        65536 => Some(H264Profile::ConstrainedBaseline),
        524288 => Some(H264Profile::ConstrainedHigh),
        id => {
            crate::info!("Unknown H.264 profile id: {}", id);
            None
        }
    }
}
